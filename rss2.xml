<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0"
  xmlns:atom="http://www.w3.org/2005/Atom"
  xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>Rimiiii&#39;s Blog</title>
    <link>https://rimiiii.github.io/</link>
    
    <atom:link href="https://rimiiii.github.io/rss2.xml" rel="self" type="application/rss+xml"/>
    
    <description>이것저것 끄적이는 블로그</description>
    <pubDate>Wed, 16 Jun 2021 14:41:57 GMT</pubDate>
    <generator>http://hexo.io/</generator>
    
    <item>
      <title>[논문 리뷰] Benchmarking deep learning models on large healthcare datasets</title>
      <link>https://rimiiii.github.io/2021/06/15/benchmarking-deep-learning-on-healthcare-datasets/</link>
      <guid>https://rimiiii.github.io/2021/06/15/benchmarking-deep-learning-on-healthcare-datasets/</guid>
      <pubDate>Tue, 15 Jun 2021 13:38:50 GMT</pubDate>
      
      <description>&lt;p&gt;&lt;code&gt;MIMIC3&lt;/code&gt;를 이용한 딥러닝 모델들의 벤치마킹 연구 논문을 리뷰하려 한다.&lt;/p&gt;</description>
      
      
      
      <content:encoded><![CDATA[<p><code>MIMIC3</code>&#xB97C; &#xC774;&#xC6A9;&#xD55C; &#xB525;&#xB7EC;&#xB2DD; &#xBAA8;&#xB378;&#xB4E4;&#xC758; &#xBCA4;&#xCE58;&#xB9C8;&#xD0B9; &#xC5F0;&#xAD6C; &#xB17C;&#xBB38;&#xC744; &#xB9AC;&#xBDF0;&#xD558;&#xB824; &#xD55C;&#xB2E4;.</p><span id="more"></span><h1 id="Abstract"><a href="#Abstract" class="headerlink" title="Abstract"></a>Abstract</h1><p>&#xB525;&#xB7EC;&#xB2DD; &#xBAA8;&#xB378;&#xC740; &#xB2E4;&#xC591;&#xD55C; &#xBD84;&#xC57C;&#xC5D0;&#xC11C; &#xB9CE;&#xC774; &#xC0AC;&#xC6A9;&#xB418;&#xACE0; &#xC788;&#xB2E4;. &#xADF8;&#xB7EC;&#xB098; &#xC624;&#xD508;&#xC18C;&#xC2A4; &#xC758;&#xB8CC;&#xB370;&#xC774;&#xD130;&#xB97C; &#xC774;&#xC6A9;&#xD55C; &#xBA38;&#xC2E0;&#xB7EC;&#xB2DD;&#xACFC; &#xC608;&#xD6C4; scoring system SOTA &#xC218;&#xC900;&#xC758; &#xB525;&#xB7EC;&#xB2DD; &#xBAA8;&#xB378;&#xC740; &#xAC70;&#xC758; &#xC5C6;&#xB2E4;. &#xBCF8; &#xB17C;&#xBB38;&#xC5D0;&#xC11C;&#xB294; &#xB525;&#xB7EC;&#xB2DD; &#xBAA8;&#xB378; &#xB610;&#xB294; &#xBA38;&#xC2E0;&#xB7EC;&#xB2DD; &#xBAA8;&#xB378;&#xC758; &#xC559;&#xC0C1;&#xBE14;, SAPS II&#xC640; SOFA &#xC810;&#xC218;&#xB97C; &#xC774;&#xC6A9;&#xD55C; &#xBA87;&#xAC1C;&#xC758; &#xC758;&#xB8CC; &#xBD84;&#xC57C;&#xC5D0;&#xC11C;&#xC758; &#xC608;&#xCE21;(&#xC0AC;&#xB9DD;, &#xC785;&#xC6D0;&#xAE30;&#xAC04;, ICD-9 code &#xADF8;&#xB8F9;) &#xBCA4;&#xCE58;&#xB9C8;&#xD0B9; &#xACB0;&#xACFC;&#xB97C; &#xC81C;&#xC2DC;&#xD558;&#xB824;&#xD55C;&#xB2E4;. &#xD574;&#xB2F9; &#xC5F0;&#xAD6C;&#xC5D0;&#xC11C;&#xB294; ICU &#xB370;&#xC774;&#xD130;&#xC14B;&#xC778; <code>MIMIC III</code>&#xB97C; &#xC0AC;&#xC6A9;&#xD558;&#xC600;&#xB2E4;. &#xBCF8; &#xB17C;&#xBB38;&#xC758; &#xACB0;&#xACFC;&#xB294; &#xB525;&#xB7EC;&#xB2DD; &#xBAA8;&#xB378;&#xC740; raw clinical time series data&#xB97C; input feature&#xB85C; &#xC0AC;&#xC6A9;&#xD558;&#xB294; &#xBAA8;&#xB378;&#xB4E4;&#xC5D0;&#xAC8C; &#xC9C0;&#xC18D;&#xC801;&#xC778; &#xC131;&#xB2A5;&#xC774; &#xB098;&#xC628;&#xB2E4;&#xB294; &#xACB0;&#xACFC;&#xB97C; &#xBCF4;&#xC5EC;&#xC900;&#xB2E4;.</p><hr><h1 id="Introduction"><a href="#Introduction" class="headerlink" title="Introduction"></a>Introduction</h1><p><code>&#xD658;&#xC790;&#xC758; &#xC0AC;&#xB9DD;&#xACFC; &#xC785;&#xC6D0;&#xAE30;&#xAC04;</code>&#xC740; ICU &#xC785;&#xC6D0;&#xC5D0;&#xC11C; &#xAC00;&#xC7A5; &#xC911;&#xC694;&#xD55C; &#xC784;&#xC0C1; &#xACB0;&#xACFC;&#xC774;&#xB2E4;. &#xADF8;&#xB9AC;&#xACE0; &#xC9C8;&#xBCD1;&#xC758; &#xC911;&#xC99D; &#xCE21;&#xBA74;&#xC5D0;&#xC11C; &#xB3C4;&#xC6C0;&#xC744; &#xC904; &#xC218; &#xC788;&#xACE0; &#xC0C8;&#xB85C;&#xC6B4; &#xCE58;&#xB8CC;, &#xC911;&#xC7AC; &#xBC0F; &#xAC74;&#xAC15; &#xAD00;&#xB9AC; &#xC815;&#xCC45;&#xC758; &#xAC00;&#xCE58;&#xB97C; &#xACB0;&#xC815;&#xD560; &#xC218; &#xC788;&#xB2E4;. SAPS-II, SOFA, APACHE&#xC640; &#xAC19;&#xC740; &#xC911;&#xC99D;&#xB3C4; &#xC810;&#xC218;&#xB294; ICU&#xC5D0; &#xB4E4;&#xC5B4;&#xC628; &#xB4A4; 24&#xC2DC;&#xAC04; &#xB0B4;&#xC5D0; &#xC5BB;&#xC740; &#xCE21;&#xC815;&#xAC12;&#xC73C;&#xB85C; &#xC815;&#xC758;&#xB418;&#xC5C8;&#xC73C;&#xBA70; &#xC0AC;&#xB9DD;&#xB960;&#xC744; &#xC608;&#xCE21;&#xD558;&#xAE30; &#xC704;&#xD55C; &#xBAA9;&#xC801;&#xC73C;&#xB85C; &#xAC1C;&#xBC1C;&#xB418;&#xC5C8;&#xB2E4;.<br>&#xCD5C;&#xADFC; &#xBA38;&#xC2E0;&#xB7EC;&#xB2DD;&#xACFC; &#xB525;&#xB7EC;&#xB2DD;&#xC758; &#xBC1C;&#xC804;&#xACFC; &#xC131;&#xACF5;&#xC73C;&#xB85C; &#xB9CE;&#xC740; &#xC5F0;&#xAD6C;&#xC790;&#xB4E4;&#xC774; ICU &#xC785;&#xC6D0;&#xC758; &#xC784;&#xC0C1; &#xC608;&#xCE21; &#xC791;&#xC5C5;&#xC5D0; &#xBA38;&#xC2E0;&#xB7EC;&#xB2DD;&#xACFC; &#xB525;&#xB7EC;&#xB2DD; &#xBAA8;&#xB378;&#xC744; &#xCCB4;&#xD0DD;&#xD558;&#xC600;&#xB2E4;. &#xBCF8; &#xB17C;&#xBB38;&#xC5D0;&#xC11C; &#xC18C;&#xAC1C;&#xD558;&#xB294; &#xC5F0;&#xAD6C;&#xB4E4;&#xC740; &#xB2E4;&#xC74C;&#xACFC; &#xAC19;&#xB2E4;.</p><ul><li>&#xBA38;&#xC2E0;&#xB7EC;&#xB2DD; &#xC559;&#xC0C1;&#xBE14; &#xBAA8;&#xB378;&#xC744; &#xC774;&#xC6A9;&#xD55C; &#xC0AC;&#xB9DD;&#xB960; &#xC608;&#xCE21;</li><li>gradient boosting&#xACFC; logistic regression &#xBAA8;&#xB378;&#xC744; &#xC774;&#xC6A9;&#xD55C; &#xC0AC;&#xB9DD;&#xB960; &#xC608;&#xCE21;</li><li>&#xB525;&#xB7EC;&#xB2DD; &#xBAA8;&#xB378;&#xC744; &#xC774;&#xC6A9;&#xD55C; 4&#xAC1C;&#xC758; &#xC784;&#xC0C1; &#xC608;&#xCE21;</li></ul><p>&#xBCF8; &#xC5F0;&#xAD6C;&#xC758; &#xC8FC; &#xAE30;&#xC5EC;&#xC810;&#xC740; &#xB2E4;&#xC74C;&#xACFC; &#xAC19;&#xB2E4;.</p><ul><li>&#xB525;&#xB7EC;&#xB2DD; &#xBAA8;&#xB378;&#xC744; &#xC774;&#xC6A9;&#xD55C; &#xC0AC;&#xB9DD;&#xB960; &#xC608;&#xCE21;, &#xC785;&#xC6D0;&#xAE30;&#xAC04; &#xC608;&#xCE21;, ICD-9 code &#xADF8;&#xB8F9; &#xC608;&#xCE21;(&#xC774; &#xC2E4;&#xD5D8;&#xB4E4;&#xC740; &#xBA38;&#xC2E0;&#xB7EC;&#xB2DD; &#xBAA8;&#xB378;&#xACFC; severity scoring system&#xB4E4;&#xBCF4;&#xB2E4; &#xB354; &#xC88B;&#xC740; &#xC131;&#xB2A5;&#xC744; &#xB098;&#xD0C0;&#xB0C8;&#xB2E4;.</li><li>&#xB525;&#xB7EC;&#xB2DD; &#xBAA8;&#xB378;&#xC774; clinical feature&#xB4E4;&#xC758; &#xB8F0; &#xAE30;&#xBC18; &#xC804;&#xCC98;&#xB9AC;&#xAC00; &#xB525;&#xB7EC;&#xB2DD; &#xBAA8;&#xB378;&#xC5D0; &#xD544;&#xC694;&#xD558;&#xC9C0; &#xC54A;&#xB2E4;&#xB294; &#xAC83;&#xC744; &#xAC00;&#xB974;&#xD0A4;&#xB294; raw feature&#xB4E4;&#xC758; &#xB354; &#xB098;&#xC740; &#xACB0;&#xACFC;&#xB97C; &#xC5BB;&#xB294;&#xB2E4;&#xB294; &#xAC83;&#xC744; &#xBCF4;&#xC5EC;&#xC900;&#xB2E4;.</li></ul><hr><h1 id="MIMIC-III-dataset-preprocessing"><a href="#MIMIC-III-dataset-preprocessing" class="headerlink" title="MIMIC-III dataset preprocessing"></a>MIMIC-III dataset preprocessing</h1><h2 id="Cohort-selection"><a href="#Cohort-selection" class="headerlink" title="Cohort selection"></a>Cohort selection</h2><p>15&#xC138;&#xBCF4;&#xB2E4; &#xB9CE;&#xC740; &#xB098;&#xC774;&#xC758; &#xD658;&#xC790;&#xB4E4;&#xC744; &#xC5B4;&#xB978;&#xC774;&#xB77C; &#xC815;&#xC758;&#xD558;&#xC600;&#xACE0; &#xC5B4;&#xB978;&#xC758; &#xD658;&#xC790;&#xB4E4;&#xB9CC; &#xD65C;&#xC6A9;&#xD558;&#xC600;&#xB2E4;. &#xADF8; &#xD658;&#xC790;&#xB4E4;&#xC758; &#xCCAB;&#xBC88;&#xC9F8; &#xC785;&#xC6D0;&#xAE30;&#xB85D;&#xB9CC;&#xC744; &#xC0AC;&#xC6A9;&#xD558;&#xC600;&#xACE0; &#xADF8; &#xC774;&#xD6C4;&#xC5D0; &#xC785;&#xC6D0;&#xD55C; &#xAE30;&#xB85D;&#xC740; &#xC0AC;&#xC6A9;&#xD558;&#xC9C0; &#xC54A;&#xC558;&#xB2E4;. &#xC774;&#xB294; &#xBD84;&#xC11D;&#xC5D0; &#xC788;&#xC5B4;&#xC11C; &#xC815;&#xBCF4;&#xB204;&#xCD9C; &#xAC00;&#xB2A5;&#xC131;&#xC744; &#xBC29;&#xC9C0;&#xD558;&#xACE0; related work&#xC640; &#xC720;&#xC0AC;&#xD55C; &#xC2E4;&#xD5D8; &#xC124;&#xC815;&#xC744; &#xD558;&#xAE30; &#xC704;&#xD574;&#xC11C;&#xB2E4;.</p><h2 id="Data-extraction"><a href="#Data-extraction" class="headerlink" title="Data extraction"></a>Data extraction</h2><p>&#xBCF8; &#xB17C;&#xBB38;&#xC5D0;&#xC11C;&#xB294; &#xC544;&#xB798;&#xC758; &#xD14C;&#xC774;&#xBE14;&#xC744; &#xC0AC;&#xC6A9;&#xD558;&#xC600;&#xB2E4;.</p><ul><li>inputevents(inputevents_cv, inputevents_mv): philips CareVue &#xC2DC;&#xC2A4;&#xD15C;&#xACFC; iMDSoft MetaVision &#xC2DC;&#xC2A4;&#xD15C;&#xC744; &#xC0AC;&#xC6A9;&#xD558;&#xC5EC; &#xBAA8;&#xB2C8;&#xB7EC;&#xB9C1;&#xD55C; &#xD658;&#xC790;&#xC758; input &#xC815;&#xBCF4;</li><li>ouputevents: ICU&#xC5D0; &#xC788;&#xB294; &#xB3D9;&#xC548; &#xD658;&#xC790;&#xC758; output &#xC815;&#xBCF4;</li><li>chartevents: &#xD658;&#xC790;&#xC5D0; &#xB300;&#xD574; &#xCC28;&#xD2B8;&#xB85C; &#xC791;&#xC131;&#xB41C; &#xBAA8;&#xB4E0; &#xC815;&#xBCF4;</li><li>labevents: lab &#xC815;&#xBCF4;</li><li>prescriptions: &#xD658;&#xC790;&#xC5D0; &#xCC98;&#xBC29;&#xB41C; &#xC815;&#xBCF4;, &#xCC98;&#xBC29;&#xBC1B;&#xC558;&#xC73C;&#xB098; &#xBC18;&#xB4DC;&#xC2DC; &#xD22C;&#xC5EC;&#xB418;&#xB294; &#xAC83;&#xC740; &#xC544;&#xB2D8;<br>&#xBCF8; &#xC5F0;&#xAD6C;&#xC5D0;&#xC11C; &#xC0AC;&#xC6A9;&#xD558;&#xB294; &#xB370;&#xC774;&#xD130;&#xC14B;&#xC740; MIMIC-III&#xC640; MIMIC-III  (CareVue)&#xC774;&#xB2E4;.</li></ul><h2 id="Data-cleaning"><a href="#Data-cleaning" class="headerlink" title="Data cleaning"></a>Data cleaning</h2><ul><li><p>&#xD2B9;&#xC815; &#xBCC0;&#xC218;&#xC758; unit&#xB4E4; &#xBD88;&#xC77C;&#xCE58;: &#xC774;&#xB97C; &#xD574;&#xACB0;&#xD558;&#xAE30; &#xC704;&#xD574; &#xBCC0;&#xC218;&#xBCC4;&#xB85C; &#xB2E8;&#xC704;&#xB4E4;&#xC758; &#xBE44;&#xC728;&#xC744; &#xAD6C;&#xD558;&#xC600;&#xACE0; &#xD558;&#xB098;&#xC758; &#xB2E8;&#xC704;&#xB9CC; &#xAC00;&#xC9C0;&#xACE0; &#xC788;&#xC744; &#xACBD;&#xC6B0;&#xB294; &#xADF8;&#xB300;&#xB85C; &#xB450;&#xACE0; 90% &#xC774;&#xC0C1;&#xC774; &#xCC28;&#xC9C0;&#xD558;&#xACE0; &#xC788;&#xB294; unit&#xC744; major unit&#xC774;&#xB77C; &#xC815;&#xC758;&#xD558;&#xC600;&#xB294;&#xB370; &#xC774; unit&#xC740; &#xADF8;&#xB300;&#xB85C; &#xB450;&#xACE0; &#xB098;&#xBA38;&#xC9C0; unit&#xB4E4;&#xC740; &#xC0AD;&#xC81C;&#xD558;&#xC600;&#xB2E4;. &#xC774;&#xC678;&#xC758; major unit(90% &#xC774;&#xC0C1;&#xC744; &#xCC28;&#xC9C0;&#xD558;&#xB294; unit)&#xAC00; &#xC5C6;&#xB294; &#xACBD;&#xC6B0; <a href="https://www.drugs.com/dosage/">&#xBB38;&#xD5CC;</a>&#xC744; &#xCC38;&#xACE0;&#xD558;&#xC5EC; &#xD558;&#xB098;&#xC758; unit&#xC73C;&#xB85C; &#xBCC0;&#xD658;&#xD558;&#xC600;&#xB2E4;. &#xBCC0;&#xD658;&#xB41C; unit&#xC740; &#xB17C;&#xBB38;&#xC758; Appendix A.6&#xC5D0; &#xD655;&#xC778;&#xD560; &#xC218; &#xC788;&#xB2E4;. &#xC774; &#xC704;&#xC758; &#xAC83;&#xB4E4;&#xC5D0; &#xD574;&#xB2F9;&#xB418;&#xC9C0; &#xC54A;&#xB294; feature&#xC758; &#xACBD;&#xC6B0; &#xC0AD;&#xC81C;&#xD558;&#xC600;&#xB2E4;.</p></li><li><p>&#xC77C;&#xBD80; &#xBCC0;&#xC218;&#xC5D0;&#xB294; &#xB3D9;&#xC2DC;&#xC5D0; &#xAE30;&#xB85D;&#xB41C; &#xAC12;&#xB4E4;&#xC774; &#xC874;&#xC7AC;&#xD568;: numerical feature&#xB4E4;&#xC758; &#xACBD;&#xC6B0;, average&#xB97C; &#xAD6C;&#xD588;&#xACE0; categorical feature&#xC758; &#xACBD;&#xC6B0;, &#xCCAB;&#xBC88;&#xC9F8;&#xB85C; &#xB098;&#xD0C0;&#xB09C; &#xAC12;&#xC744; &#xC720;&#xC9C0;&#xD558;&#xC600;&#xB2E4;.</p></li><li><p>&#xC77C;&#xBD80; &#xBCC0;&#xC218;&#xC758; &#xACBD;&#xC6B0; &#xBC94;&#xC704;&#xB85C; &#xAE30;&#xB85D;&#xB418;&#xC5B4;&#xC788;&#xC74C;: &#xBC94;&#xC704;&#xC758; median &#xAC12;&#xC744; &#xAD6C;&#xD558;&#xC600;&#xB2E4;.</p></li></ul><h2 id="Feature-selection-and-extraction"><a href="#Feature-selection-and-extraction" class="headerlink" title="Feature selection and extraction"></a>Feature selection and extraction</h2><p>&#xBCF8; &#xC5F0;&#xAD6C;&#xC5D0;&#xC11C;&#xB294; &#xC608;&#xCE21;&#xC5D0; &#xC0AC;&#xC6A9;&#xD558;&#xAE30; &#xC704;&#xD574; &#xB370;&#xC774;&#xD130;&#xC14B;&#xC5D0;&#xC11C; feature&#xB4E4;&#xC744; &#xCD94;&#xCD9C;&#xD558;&#xC600;&#xACE0; &#xCCA0;&#xC800;&#xD55C; &#xBE44;&#xAD50;&#xB97C; &#xC704;&#xD574; 3&#xAC00;&#xC9C0;&#xC758; features set&#xC744; &#xC120;&#xD0DD;&#xD558;&#xC600;&#xB2E4;.</p><ul><li><p>feature set A&#xB294; SAPS-II&#xC758; &#xACC4;&#xC0B0;&#xC5D0; &#xC0AC;&#xC6A9;&#xB418;&#xB294; feature&#xB4E4;&#xB85C; &#xAD6C;&#xC131;&#xB41C;&#xB2E4;. &#xC774; feature&#xB4E4;&#xC758; &#xACBD;&#xC6B0; &#xC758;&#xD559; &#xC9C0;&#xC2DD;&#xC5D0; &#xB530;&#xB77C; outlier&#xB97C; &#xC81C;&#xAC70;&#xD558;&#xACE0; &#xAD00;&#xB828; feature&#xB4E4;&#xC744; &#xBCD1;&#xD569;&#xD558;&#xC600;&#xB2E4;. &#xBCD1;&#xD569;&#xD55C; feature&#xB4E4;&#xC740; &#xB17C;&#xBB38;&#xC5D0;&#xC11C; &#xD655;&#xC778;&#xD560; &#xC218; &#xC788;&#xB2E4;. &#xB9CC;&#xC131;&#xC9C8;&#xBCD1;, &#xC785;&#xC6D0;&#xD615;&#xD0DC;, &#xB098;&#xC774;&#xC640; &#xAC19;&#xC740; feature&#xB4E4;&#xC740; &#xBE44;&#xC2DC;&#xACC4;&#xC5F4;&#xB85C; &#xCC98;&#xB9AC;&#xB418;&#xC5C8;&#xACE0; &#xC774;&#xC678;&#xC758; &#xB098;&#xBA38;&#xC9C0;&#xB294; &#xC2DC;&#xACC4;&#xC5F4; feature&#xB4E4;&#xB85C; &#xCC98;&#xB9AC;&#xB418;&#xC5C8;&#xB2E4;.</p></li><li><p>feature set B&#xB294; SAPS-II&#xC5D0; &#xC0AC;&#xC6A9;&#xB418;&#xB294; 17&#xAC1C;&#xC758; feature&#xB4E4;&#xACFC; &#xAD00;&#xB828;&#xC788;&#xB294; 20&#xAC1C;&#xC758; feature&#xB4E4;&#xB85C; &#xAD6C;&#xC131;&#xB418;&#xC5B4;&#xC788;&#xB2E4;. Feature set A&#xB97C; &#xC5BB;&#xAE30; &#xC704;&#xD574; &#xCC98;&#xB9AC;&#xB41C; 17&#xAC1C;&#xC758; feature&#xB4E4; &#xB300;&#xC2E0; &#xC6D0; &#xC0C1;&#xD0DC;&#xC758; &#xAC12;(raw value)&#xC744; &#xACE0;&#xB824;&#xD55C;&#xB2E4;. &#xC774;&#xC0C1;&#xCE58;&#xB97C; &#xC81C;&#xAC70;&#xD558;&#xC9C0; &#xC54A;&#xACE0; 0&#xBBF8;&#xB9CC;&#xC758; &#xAC12;&#xB9CC; &#xC0AD;&#xC81C;&#xD558;&#xC600;&#xB2E4;. <code>&#xC774; feature set&#xC740; raw value&#xC758; feature&#xB4E4;&#xC758; &#xC131;&#xB2A5;&#xC744; &#xC5F0;&#xAD6C;&#xD558;&#xAE30; &#xC704;&#xD574; &#xAD6C;&#xCD95;&#xB418;&#xC5C8;&#xB2E4;.</code></p></li><li><p>feature set C&#xB294; 136&#xAC1C;&#xC758; raw value&#xB4E4;&#xB85C; &#xAD6C;&#xC131;&#xB418;&#xBA70; feature set B&#xC758; feature&#xB4E4;&#xB3C4; &#xD3EC;&#xD568;&#xB41C;&#xB2E4;.  136&#xAC1C;&#xC758; feature&#xB4E4;&#xC740; 2,000&#xAC1C;&#xC758; feature&#xB4E4; &#xC911;&#xC5D0; &#xB0AE;&#xC740; &#xB204;&#xB77D;&#xBE44;&#xC728;&#xC744; &#xAE30;&#xBC18;&#xC73C;&#xB85C; &#xC120;&#xD0DD;&#xB418;&#xC5C8;&#xB2E4;. Feature set B&#xC640; &#xC720;&#xC0AC;&#xD558;&#xAC8C; &#xC804;&#xCC98;&#xB9AC;&#xB97C; &#xD558;&#xC9C0; &#xC54A;&#xC558;&#xC73C;&#xBA70; &#xC6D0; &#xC0C1;&#xD0DC;&#xC758; &#xAC12;&#xC744; &#xC0AC;&#xC6A9;&#xD588;&#xB2E4;. &#xC774; feature set&#xC740; &#xC608;&#xCE21; &#xBAA8;&#xB378;&#xC774; &#xB300;&#xC6A9;&#xB7C9;&#xC758; &#xC784;&#xC0C1; &#xC2DC;&#xACC4;&#xC5F4; &#xB370;&#xC774;&#xD130;&#xB97C; <code>feature representation&#xC744; &#xC790;&#xB3D9;&#xC73C;&#xB85C; &#xD559;&#xC2B5;&#xD560; &#xC218; &#xC788;&#xB294;&#xC9C0;</code> &#xB3D9;&#xC2DC;&#xC5D0; <code>&#xB354; &#xC88B;&#xC740; &#xC131;&#xB2A5;&#xC744; &#xB098;&#xD0C0;&#xB0BC; &#xC218; &#xC788;&#xB294;&#xC9C0;</code> &#xC5F0;&#xAD6C;&#xD558;&#xAE30; &#xC704;&#xD574; &#xC120;&#xD0DD;&#xB418;&#xC5C8;&#xB2E4;.</p></li></ul><p>&#xBCF8; &#xC5F0;&#xAD6C;&#xC5D0;&#xC11C;&#xB294; &#xC785;&#xC6D0;&#xD558;&#xACE0; &#xCCAB; 24&#xC2DC;&#xAC04;&#xACFC; &#xCCAB; 48&#xC2DC;&#xAC04; &#xC548;&#xC5D0; &#xC218;&#xC9D1;&#xB41C; feature&#xB4E4;&#xC744; &#xCD94;&#xCD9C;&#xD588;&#xC73C;&#xBA70; &#xC2DC;&#xACC4;&#xC5F4; feature&#xB4E4;&#xC758; &#xACBD;&#xC6B0; 1&#xC2DC;&#xAC04;&#xB9C8;&#xB2E4; &#xC0D8;&#xD50C;&#xB9C1;&#xD558;&#xC600;&#xB2E4;. &#xC0D8;&#xD50C;&#xB9C1; &#xACFC;&#xC815; &#xC911;&#xC5D0; &#xBA87;&#xAC1C;&#xC758; feature&#xB4E4;&#xC740; &#xAC19;&#xC740; &#xC2DC;&#xAC04;&#xC548;&#xC5D0; &#xC5EC;&#xB7EC;&#xAC1C;&#xC758; &#xD310;&#xB3C5;&#xAC12;&#xC744; &#xAC00;&#xC9C4; &#xACBD;&#xC6B0;, &#xD3C9;&#xADE0; &#xB610;&#xB294; &#xD569;&#xACC4;&#xB97C; &#xAD6C;&#xD558;&#xC600;&#xB2E4;. &#xC77C;&#xBC18;&#xC801;&#xC73C;&#xB85C; &#xC218;&#xC561; &#xB610;&#xB294; &#xC57D;&#xBB3C;&#xC5D0; &#xB300;&#xD55C; &#xAE30;&#xB85D;&#xC740; &#xD569;&#xACC4;&#xB97C; &#xAD6C;&#xD558;&#xC600;&#xACE0; &#xC774;&#xC678;&#xC758; &#xB2E4;&#xB978; feature&#xB4E4;&#xC740; &#xD3C9;&#xADE0;&#xC744; &#xAD6C;&#xD558;&#xC600;&#xB2E4;. &#xACB0;&#xCE21;&#xAC12;&#xC774; &#xBC1C;&#xC0DD;&#xD55C; &#xACBD;&#xC6B0;, &#xC55E;&#xB4A4;&#xC758; &#xAC12;&#xC744; &#xD3C9;&#xADE0;&#xB0B4;&#xC11C; imputation &#xD558;&#xC600;&#xB2E4;.</p><hr><h1 id="Benchmarking-experiments"><a href="#Benchmarking-experiments" class="headerlink" title="Benchmarking experiments"></a>Benchmarking experiments</h1><h2 id="Benchmark-prediction-tasks"><a href="#Benchmark-prediction-tasks" class="headerlink" title="Benchmark prediction tasks"></a>Benchmark prediction tasks</h2><ul><li><p>Mortality prediction(binary classification)<br>&#xB354; &#xC790;&#xC138;&#xD55C; label &#xC815;&#xC758;&#xB294; appendix A.2&#xB97C; &#xCC38;&#xACE0;&#xD558;&#xC138;&#xC694;.</p><ul><li>In-hospital mortality prediction: ICU&#xC5D0; &#xC785;&#xC6D0; &#xD6C4; &#xD658;&#xC790;&#xC758; &#xC0AC;&#xB9DD;&#xC5EC;&#xBD80;&#xB97C; &#xC608;&#xCE21;</li><li>Short-term mortality prediction: 2, 3&#xC77C; &#xC548;&#xC5D0; &#xD658;&#xC790;&#xC758; &#xC0AC;&#xB9DD;&#xC5EC;&#xBD80;&#xB97C; &#xC608;&#xCE21;&#xD558;&#xBA70; &#xCCAB; 24&#xC2DC;&#xAC04; &#xB370;&#xC774;&#xD130;&#xC758; &#xACBD;&#xC6B0; 2, 3&#xC77C; mortality&#xB97C; &#xC608;&#xCE21;&#xD560; &#xC218; &#xC788;&#xC9C0;&#xB9CC; 48&#xC2DC;&#xAC04; &#xB370;&#xC774;&#xD130;&#xC758; &#xACBD;&#xC6B0; 3&#xC77C; mortality&#xB97C; &#xC608;&#xCE21;&#xD560; &#xC218; &#xC788;&#xB2E4;.</li><li>Long-term mortality prediction: &#xCCAB; 24&#xC2DC;&#xAC04;, 48&#xC2DC;&#xAC04; &#xB370;&#xC774;&#xD130;&#xB97C; &#xC774;&#xC6A9;&#xD558;&#xC5EC; 30&#xC77C;, 1&#xB144; &#xC548;&#xC5D0; &#xD658;&#xC790;&#xC758; &#xC0AC;&#xB9DD;&#xC5EC;&#xBD80;&#xB97C; &#xC608;&#xCE21;    </li></ul></li><li><p>ICD-9 code group prediction(multi-task prediction)</p><p>ICD-9 diagnosis code&#xB97C; &#xC608;&#xCE21;&#xD558;&#xB294; &#xAC83;&#xC774;&#xBA70;, ICD &#xCF54;&#xB4DC;&#xB4E4;&#xC740; &#xB2E4;&#xC591;&#xD55C; &#xC99D;&#xC0C1;, &#xC9D5;&#xD6C4;,  &#xBD80;&#xC0C1;&#xC774;&#xB098; &#xC9C8;&#xBCD1;&#xC758; &#xC6D0;&#xC778; &#xB4F1;&#xC744; &#xBD84;&#xB958;&#xD558;&#xB294;&#xB370; &#xC0AC;&#xC6A9;&#xB429;&#xB2C8;&#xB2E4;. 20&#xAC1C;&#xC758; &#xADF8;&#xB8F9;&#xC73C;&#xB85C; &#xB098;&#xB258;&#xC5B4;&#xC838;&#xC788;&#xB2E4;.<br>ICD-9 &#xCF54;&#xB4DC; &#xADF8;&#xB8F9; 760-779&#xB294; &#xC2E0;&#xC0DD;&#xC544;&#xC5D0;&#xAC8C; &#xBD84;&#xB958;&#xB418;&#xB294; &#xCF54;&#xB4DC;&#xC774;&#xAE30; &#xB54C;&#xBB38;&#xC5D0; &#xC5B4;&#xB978;&#xC744; &#xB300;&#xC0C1;&#xC73C;&#xB85C; &#xD558;&#xB294; &#xBCA4;&#xCE58;&#xB9C8;&#xD0B9; &#xC5F0;&#xAD6C;&#xC5D0;&#xC11C; &#xC81C;&#xC678;&#xD558;&#xC600;&#xB2E4;.</p></li><li><p>Length of stay prediction(regression problem)<br>&#xAC01; admission&#xC5D0; &#xB300;&#xD55C; &#xC785;&#xC6D0; &#xAE30;&#xAC04;&#xC744; &#xC608;&#xCE21;&#xD558;&#xC600;&#xB2E4;.</p></li></ul><h2 id="Prediction-algorithms"><a href="#Prediction-algorithms" class="headerlink" title="Prediction algorithms"></a>Prediction algorithms</h2><h3 id="Scoring-methods"><a href="#Scoring-methods" class="headerlink" title="Scoring methods"></a>Scoring methods</h3><ul><li><p>SAPS-II : &#xC774; &#xC810;&#xC218;&#xB294; ICU&#xC5D0; &#xC785;&#xC6D0;&#xD55C; &#xD658;&#xC790;&#xB4E4; &#xC9C8;&#xBCD1;&#xC758; &#xC911;&#xC99D;&#xB3C4; &#xCE21;&#xC815;&#xD558;&#xAE30; &#xC704;&#xD574; &#xAC1C;&#xBC1C;&#xB418;&#xC5C8;&#xB2E4;. 12&#xAC1C;&#xC758; feature&#xB4E4;&#xC744; &#xC774;&#xC6A9;&#xD574; &#xACC4;&#xC0B0;&#xD560; &#xC218; &#xC788;&#xB2E4;.  SAPS-II&#xB97C; &#xC774;&#xC6A9;&#xD55C; mortality &#xC608;&#xCE21;&#xC740; &#xB2E4;&#xC74C;&#xACFC; &#xAC19;&#xB2E4;.</p><p>  $$<br>  log{\frac{p_{death}}{1-P_{death}}} = &#x2212;7.7631 + 0.0737&#xB7;S + 0.9971&#xB7;log(1 + S)<br>  $$</p></li><li><p>SOFA: ICU&#xC5D0; &#xC785;&#xC6D0;&#xD55C; &#xD658;&#xC790;&#xB4E4;&#xC758; &#xC7A5;&#xAE30;&#xBD80;&#xC804; &#xBC0F; &#xC608;&#xD6C4; &#xD3C9;&#xAC00;&#xB97C; &#xC704;&#xD55C; &#xC810;&#xC218;&#xC774;&#xB2E4;. SOFA&#xB97C; &#xAE30;&#xBC18;&#xC73C;&#xB85C; &#xD55C; mortality &#xC608;&#xCE21;&#xC740; &#xB85C;&#xC9C0;&#xC2A4;&#xD2F1; &#xD68C;&#xADC0; &#xBAA8;&#xB378;&#xC744; &#xC0AC;&#xC6A9;&#xD558;&#xC5EC; &#xC5BB;&#xC744; &#xC218; &#xC788;&#xB2E4;.</p></li><li><p>New SAPS-II: SAPS-II&#xC758; &#xC218;&#xC815;&#xB41C; &#xBC84;&#xC804;&#xC774;&#xBA70; SAPS-II&#xC5D0; &#xC0AC;&#xC6A9;&#xB41C; feature&#xB4E4;&#xC744; &#xC0AC;&#xC6A9;&#xD558;&#xC5EC; &#xB85C;&#xC9C0;&#xC2A4;&#xD2F1; &#xD68C;&#xADC0; &#xBAA8;&#xB378;&#xC744; &#xC0AC;&#xC6A9;&#xD558;&#xC5EC; &#xC5BB;&#xC744; &#xC218; &#xC788;&#xB2E4;.</p></li></ul><h3 id="Super-Learner-models"><a href="#Super-Learner-models" class="headerlink" title="Super Learner models"></a>Super Learner models</h3><p>super learner&#xB294; &#xC608;&#xCE21; &#xC54C;&#xACE0;&#xB9AC;&#xC998;&#xC758; &#xCD5C;&#xC801;&#xC758; &#xC870;&#xD569;&#xC744; &#xCC3E;&#xAE30;&#xC704;&#xD574; &#xAC1C;&#xBC1C;&#xB41C; supervised learning algorithm&#xC774;&#xBA70; cross-validation &#xC774;&#xB860;&#xC744; &#xAE30;&#xBC18;&#xC73C;&#xB85C; &#xD55C;&#xB2E4;. &#xBCF8; &#xC5F0;&#xAD6C;&#xC5D0;&#xC11C;&#xB294; Super Learner I: &#xBC94;&#xC8FC;&#xD654;&#xB41C; &#xBCC0;&#xC218;&#xB4E4;&#xACFC;&#xC758; super learner&#xC640; Super Learner II: &#xBCC0;&#xD658;&#xB418;&#xC9C0; &#xC54A;&#xC740; &#xBCC0;&#xC218;&#xB4E4;&#xC758; super learner &#xB450;&#xAC00;&#xC9C0;&#xB97C; &#xACE0;&#xB824;&#xD558;&#xC600;&#xB2E4;. Super Learner-I&#xB294; feature set A&#xB9CC; &#xC801;&#xC6A9;&#xB418;&#xACE0; Super Learner-II&#xB294; feature set 3&#xAC00;&#xC9C0; &#xBAA8;&#xB450; &#xC0AC;&#xC6A9;&#xC774; &#xAC00;&#xB2A5;&#xD558;&#xB2E4;. </p><h3 id="Deep-Learning-models"><a href="#Deep-Learning-models" class="headerlink" title="Deep Learning models"></a>Deep Learning models</h3><p>&#xB525;&#xB7EC;&#xB2DD; &#xBAA8;&#xB378;&#xC740; end-to-end training&#xC744; &#xC704;&#xD574; &#xBCF5;&#xC7A1;&#xD55C; &#xB370;&#xC774;&#xD130; representation&#xC744; &#xC790;&#xB3D9;&#xC73C;&#xB85C; &#xCD94;&#xCD9C;&#xD558;&#xB294;&#xB370; &#xC131;&#xACF5;&#xC801;&#xC778; &#xC811;&#xADFC; &#xBC29;&#xC2DD;&#xC774;&#xB2E4;. &#xBCF8; &#xC5F0;&#xAD6C;&#xC5D0;&#xC11C;&#xB294; <code>Feedforward neural networks(FFN)</code>&#xACFC; <code>Recurrent Neural Network(RNN)</code>&#xC758; ensemble&#xC778; <code>Multimodal Deep Learning Model(MMDL)</code>&#xC744; &#xC81C;&#xC548;&#xD55C;&#xB2E4;. &#xC774; &#xBAA8;&#xB378;&#xC740; &#xACF5;&#xC720;&#xB41C; representation layer&#xB97C; &#xC0AC;&#xC6A9;&#xD558;&#xC5EC; modality&#xB4E4;&#xC758; &#xC720;&#xC0AC;&#xC131;&#xC744; &#xD559;&#xC2B5;&#xD558;&#xB294; &#xAC83;&#xC774;&#xB2E4;. EHR&#xACFC; &#xAC19;&#xC774; &#xAC01; &#xD14C;&#xC774;&#xBE14; &#xBCC4;&#xB85C; &#xBCC4;&#xB3C4;&#xC758; modality&#xB97C; &#xAC00;&#xC9C0;&#xB294; &#xB370;&#xC774;&#xD130;&#xC5D0; &#xC720;&#xC6A9;&#xD558;&#xB2E4;.</p><p align="center"><img src="/gallery/images/benchmarking-deep-learning-on-mimic/deeplearning-model-structure.png" alt="Deep learning model structure" style="zoom:35%;"></p><p>MMDL&#xC740; &#xBE44;&#xC2DC;&#xACC4;&#xC5F4; &#xB370;&#xC774;&#xD130;&#xC640; &#xC2DC;&#xACC4;&#xC5F4; &#xB370;&#xC774;&#xD130;&#xB97C; &#xAC1C;&#xBCC4;&#xC801;&#xC73C;&#xB85C; &#xB2E4;&#xB8E8;&#xB294;&#xB370; &#xBE44;&#xC2DC;&#xACC4;&#xC5F4; &#xB370;&#xC774;&#xD130;&#xB294; FFN&#xC5D0; &#xC2DC;&#xACC4;&#xC5F4; &#xB370;&#xC774;&#xD130;&#xB294; GRU&#xC5D0; input&#xC73C;&#xB85C; &#xB4E4;&#xC5B4;&#xAC00;&#xACE0; &#xB098;&#xC628; ouput&#xC744; &#xACF5;&#xC720;&#xB41C; latent representaton layer&#xC5D0; combine&#xD55C;&#xB2E4;.</p><h2 id="Implemetation-details"><a href="#Implemetation-details" class="headerlink" title="Implemetation details"></a>Implemetation details</h2><p>&#xBCF8; &#xC5F0;&#xAD6C;&#xC5D0;&#xC11C;&#xB294; Theano&#xC640; Keras&#xB85C; &#xC2DC;&#xD589;&#xD558;&#xC600;&#xACE0; 5-fold cross validation&#xC744; &#xC2E4;&#xC2DC;&#xD558;&#xC600;&#xACE0; 5&#xAC1C;&#xC758; testing fold&#xC758; &#xC131;&#xB2A5; &#xC810;&#xC218;&#xC758; &#xD3C9;&#xADE0;&#xACFC; &#xD45C;&#xC900; &#xC5D0;&#xB7EC;&#xB97C; &#xAD6C;&#xD558;&#xC600;&#xB2E4;. &#xD3C9;&#xAC00; metric&#xC73C;&#xB85C;classfication &#xBB38;&#xC81C;&#xC758; &#xACBD;&#xC6B0; AUROC&#xC640; AUPRC&#xB97C; &#xC0AC;&#xC6A9;&#xD558;&#xC600;&#xACE0;, regression &#xBB38;&#xC81C;&#xC758; &#xACBD;&#xC6B0; MSE&#xB97C; &#xC0AC;&#xC6A9;&#xD558;&#xC600;&#xB2E4;. parameter &#xD29C;&#xB2DD;&#xC758; &#xACBD;&#xC6B0;, &#xC131;&#xB2A5;&#xC758; &#xD070;&#xCC28;&#xC774;&#xB97C; &#xBCF4;&#xC774;&#xC9C0; &#xC54A;&#xC544; &#xAC01; &#xC54C;&#xACE0;&#xB9AC;&#xC998;&#xC758; &#xAE30;&#xBCF8; hyper parameter&#xB97C; &#xC138;&#xD305;&#xD558;&#xC600;&#xB2E4;.</p><p>&#xB525;&#xB7EC;&#xB2DD; &#xBAA8;&#xB378;&#xC5D0;&#xC11C;&#xB294; learning rate&#xB294; classificaton &#xBB38;&#xC81C;&#xB294;  0.001, regression &#xBB38;&#xC81C;&#xB294; 0.005&#xB85C; &#xB450;&#xC5C8;&#xACE0; RMSProp optimizer&#xB85C; train&#xD558;&#xC600;&#xB2E4;. activation function&#xC740; ReLU&#xB97C; &#xC0AC;&#xC6A9;&#xD558;&#xC600;&#xACE0; dropout rate&#xC740; 0.1, batch sizesms 100, max epoch number&#xB294; 250&#xC73C;&#xB85C; &#xC138;&#xD305;&#xD558;&#xC600;&#xACE0; early stopping&#xC744; &#xC0AC;&#xC6A9;&#xD574;&#xC11C; &#xCD5C;&#xC801;&#xC758; weight&#xB97C; &#xAD6C;&#xD558;&#xACE0; batch normalization&#xC744; &#xC0AC;&#xC6A9;&#xD558;&#xC600;&#xB2E4;. &#xC704;&#xC5D0;&#xC11C; &#xC5B8;&#xAE09;&#xD588;&#xB4EF;&#xC774; &#xBE44;&#xC2DC;&#xACC4;&#xC5F4; &#xB370;&#xC774;&#xD130;&#xB294; FFN, &#xC2DC;&#xACC4;&#xC5F4; &#xB370;&#xC774;&#xD130;&#xB294; GRU&#xB85C; &#xB2E4;&#xB918;&#xB2E4;.</p><h2 id="Results"><a href="#Results" class="headerlink" title="Results"></a>Results</h2><p>&#xB300;&#xBD80;&#xBD84;&#xC758; &#xC608;&#xCE21; &#xACB0;&#xACFC; MMDL&#xC758; &#xC131;&#xB2A5;&#xC774; &#xB354; &#xC88B;&#xC558;&#xB2E4;&#xB294; &#xAC83;&#xC744; &#xC598;&#xAE30;&#xD558;&#xACE0; &#xC788;&#xACE0; feature&#xB4E4; &#xC911;&#xC5D0;&#xC11C;&#xB294; &#xC804;&#xCC98;&#xB9AC;&#xB97C; &#xD558;&#xC9C0; &#xC54A;&#xACE0; &#xB2E4;&#xB978; feature set&#xB4E4;&#xBCF4;&#xB2E4; &#xB9CE;&#xC740; &#xC218;&#xC758; feature&#xB4E4;&#xC744; &#xAC00;&#xC9C4; feature set C&#xAC00; &#xB354; &#xC88B;&#xC740; &#xC810;&#xC218;&#xB97C; &#xC5BB;&#xC5C8;&#xB2E4;. &#xB530;&#xB77C;&#xC11C; &#xBCF8; &#xC5F0;&#xAD6C;&#xC5D0;&#xC11C;&#xB294; &#xC6D0;&#xBCF8;&#xC758; &#xC784;&#xC0C1; &#xC2DC;&#xACC4;&#xC5F4; &#xB370;&#xC774;&#xD130;&#xAC00;  &#xC608;&#xCE21; &#xBAA8;&#xB378;&#xC758; input feature&#xB85C; &#xC0AC;&#xC6A9;&#xB418;&#xB294; &#xACBD;&#xC6B0;, &#xB525;&#xB7EC;&#xB2DD; &#xBAA8;&#xB378;&#xC774; &#xBA38;&#xC2E0;&#xB7EC;&#xB2DD; &#xC559;&#xC0C1;&#xBE14;, SAPS II&#xC640; SOFA &#xC810;&#xC218;&#xB97C; &#xC774;&#xC6A9;&#xD55C; &#xC608;&#xCE21;&#xBCF4;&#xB2E4; &#xC131;&#xB2A5;&#xC774; &#xC6B0;&#xC218;&#xD558;&#xB2E4;&#xB294; &#xAC83;&#xC744; &#xBCF4;&#xC5EC;&#xC900;&#xB2E4;.</p><hr><h1 id="&#xC774;-&#xB17C;&#xBB38;&#xC744;-&#xC77D;&#xACE0;"><a href="#&#xC774;-&#xB17C;&#xBB38;&#xC744;-&#xC77D;&#xACE0;" class="headerlink" title="&#xC774; &#xB17C;&#xBB38;&#xC744; &#xC77D;&#xACE0;"></a>&#xC774; &#xB17C;&#xBB38;&#xC744; &#xC77D;&#xACE0;</h1><p>&#xC8FC;&#xB85C; lab event &#xB370;&#xC774;&#xD130;&#xB97C; &#xC0AC;&#xC6A9;&#xD558;&#xC600;&#xACE0; &#xACB0;&#xB860;&#xC73C;&#xB860; &#xBA38;&#xC2E0;&#xB7EC;&#xB2DD;&#xC774;&#xB098; SAPS-II, SOFA&#xC640; &#xAC19;&#xC740; method&#xBCF4;&#xB2E4; &#xB525;&#xB7EC;&#xB2DD; &#xBAA8;&#xB378;&#xC758; &#xC131;&#xB2A5;&#xC774; &#xC88B;&#xC558;&#xB2E4;&#xB294; &#xAC83;&#xC744; &#xB9D0;&#xD558;&#xACE0; &#xC788;&#xB2E4;. &#xC774; &#xB17C;&#xBB38;&#xC744; &#xC77D;&#xACE0; &#xB098;&#xC11C; &#xB2E4;&#xB978; &#xBA38;&#xC2E0;&#xB7EC;&#xB2DD; &#xBAA8;&#xB378;&#xBCF4;&#xB2E4; &#xC131;&#xB2A5;&#xC774; &#xB6F0;&#xC5B4;&#xB098;&#xB2E4;&#xB294; &#xAC83;&#xC740; &#xC774;&#xD574;&#xD588;&#xC9C0;&#xB9CC; &#xC774; &#xBAA8;&#xB378;&#xC774; &#xC2E4;&#xC81C;&#xB85C; &#xD65C;&#xC6A9; &#xAC00;&#xB2A5;&#xD55C;&#xC9C0;&#xB294; &#xC758;&#xBB38;&#xC774; &#xB4E4;&#xC5C8;&#xB2E4;. regression task&#xC758; &#xACBD;&#xC6B0; MSE&#xB294; &#xC5B4;&#xB290; &#xAE30;&#xC900;&#xAE4C;&#xC9C0;&#xAC00; &#xC88B;&#xC740; &#xC131;&#xB2A5;&#xC744; &#xB098;&#xD0C0;&#xB0B4;&#xB294;&#xC9C0; &#xAC1C;&#xC778;&#xC801;&#xC73C;&#xB85C; &#xAD81;&#xAE08;&#xD558;&#xB2E4;. </p><p>&#xB17C;&#xBB38;&#xC5D0;&#xC11C;&#xB294; fine-tuning&#xC774; &#xC131;&#xB2A5;&#xC744; &#xD06C;&#xAC8C; &#xC88C;&#xC9C0;&#xC6B0;&#xC9C0; &#xD558;&#xC9C0; &#xC54A;&#xB294; &#xAC83;&#xC744; &#xD655;&#xC778;&#xD558;&#xACE0; &#xAE30;&#xBCF8;&#xAC12;&#xC758; hyper parameter&#xB97C; &#xC0AC;&#xC6A9;&#xD558;&#xB294;&#xB370; &#xC774; &#xBD80;&#xBD84;&#xC774; &#xC774; &#xB370;&#xC774;&#xD130;&#xC14B;&#xC5D0;&#xC11C;&#xB9CC; &#xADF8;&#xB7EC;&#xB294; &#xAC74;&#xC9C0; &#xB2E4;&#xB978; &#xB370;&#xC774;&#xD130;&#xC14B;&#xC5D0;&#xB3C4; &#xADF8;&#xB7EC;&#xB294; &#xAC74;&#xC9C0; &#xAD81;&#xAE08;&#xD574;&#xC84C;&#xB2E4;.</p><hr><h1 id="&#xCC38;&#xACE0;&#xBB38;&#xD5CC;"><a href="#&#xCC38;&#xACE0;&#xBB38;&#xD5CC;" class="headerlink" title="&#xCC38;&#xACE0;&#xBB38;&#xD5CC;"></a>&#xCC38;&#xACE0;&#xBB38;&#xD5CC;</h1><p><a href="https://www.sciencedirect.com/science/article/pii/S1532046418300716">Benchmarking deep learning models on large healthcare datasets</a></p>]]></content:encoded>
      
      
      <category domain="https://rimiiii.github.io/categories/DEEP-LEARNING/">DEEP LEARNING</category>
      
      <category domain="https://rimiiii.github.io/categories/DEEP-LEARNING/HEALTHCARE/">HEALTHCARE</category>
      
      
      <category domain="https://rimiiii.github.io/tags/MIMIC/">MIMIC</category>
      
      <category domain="https://rimiiii.github.io/tags/detection/">detection</category>
      
      
      <comments>https://rimiiii.github.io/2021/06/15/benchmarking-deep-learning-on-healthcare-datasets/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>[삽질기록] Error: unknown format: 65534</title>
      <link>https://rimiiii.github.io/2021/06/11/error1/</link>
      <guid>https://rimiiii.github.io/2021/06/11/error1/</guid>
      <pubDate>Fri, 11 Jun 2021 05:16:32 GMT</pubDate>
      
      <description>&lt;p&gt;wav file을 split한 파일을 받아 google speech recognition을 돌리는 중에 에러가 발생했다. 이 파일은 &lt;code&gt;librosa로는 읽혀지지만 wave로는 읽혀지지 않아서 의아했다&lt;/code&gt;. speech_recognition module에서 에러가 난거지만 그 안의 함수들도 함께 에러가 난거여서 원인을 찾는 것이 생각보다 어려웠다..일주일 걸렸다..ㅠ&lt;/p&gt;</description>
      
      
      
      <content:encoded><![CDATA[<p>wav file&#xC744; split&#xD55C; &#xD30C;&#xC77C;&#xC744; &#xBC1B;&#xC544; google speech recognition&#xC744; &#xB3CC;&#xB9AC;&#xB294; &#xC911;&#xC5D0; &#xC5D0;&#xB7EC;&#xAC00; &#xBC1C;&#xC0DD;&#xD588;&#xB2E4;. &#xC774; &#xD30C;&#xC77C;&#xC740; <code>librosa&#xB85C;&#xB294; &#xC77D;&#xD600;&#xC9C0;&#xC9C0;&#xB9CC; wave&#xB85C;&#xB294; &#xC77D;&#xD600;&#xC9C0;&#xC9C0; &#xC54A;&#xC544;&#xC11C; &#xC758;&#xC544;&#xD588;&#xB2E4;</code>. speech_recognition module&#xC5D0;&#xC11C; &#xC5D0;&#xB7EC;&#xAC00; &#xB09C;&#xAC70;&#xC9C0;&#xB9CC; &#xADF8; &#xC548;&#xC758; &#xD568;&#xC218;&#xB4E4;&#xB3C4; &#xD568;&#xAED8; &#xC5D0;&#xB7EC;&#xAC00; &#xB09C;&#xAC70;&#xC5EC;&#xC11C; &#xC6D0;&#xC778;&#xC744; &#xCC3E;&#xB294; &#xAC83;&#xC774; &#xC0DD;&#xAC01;&#xBCF4;&#xB2E4; &#xC5B4;&#xB824;&#xC6E0;&#xB2E4;..&#xC77C;&#xC8FC;&#xC77C; &#xAC78;&#xB838;&#xB2E4;..&#x3160;</p><span id="more"></span><h1 id="&#xC5D0;&#xB7EC;-&#xD654;&#xBA74;"><a href="#&#xC5D0;&#xB7EC;-&#xD654;&#xBA74;" class="headerlink" title="&#xC5D0;&#xB7EC; &#xD654;&#xBA74;"></a>&#xC5D0;&#xB7EC; &#xD654;&#xBA74;</h1><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">Error: unknown <span class="built_in">format</span>: <span class="number">65534</span></span><br><span class="line">Error: file does <span class="keyword">not</span> start <span class="keyword">with</span> FORM <span class="built_in">id</span></span><br><span class="line">ValueError: Audio file could <span class="keyword">not</span> be read <span class="keyword">as</span> PCM WAV, AIFF/AIFF-C, <span class="keyword">or</span> Native FLAC; check <span class="keyword">if</span> file <span class="keyword">is</span> corrupted <span class="keyword">or</span> <span class="keyword">in</span> another <span class="built_in">format</span></span><br></pre></td></tr></table></figure><p>&#xC6D0;&#xC778;&#xC740; &#xC790;&#xB978; &#xD30C;&#xC77C;&#xC758; &#xD3EC;&#xB9F7; &#xBB38;&#xC81C;&#xC600;&#xB2E4;. wav &#xD30C;&#xC77C; &#xC548;&#xC5D0;&#xB3C4; pcm &#xD3EC;&#xB9F7;&#xC744; &#xD3EC;&#xD568;&#xD558;&#xACE0; &#xC788;&#xB294;&#xB370; wav &#xD30C;&#xC77C;&#xC744; &#xC798;&#xB77C;&#xB0B4;&#xB294; &#xACFC;&#xC815;&#xC5D0;&#xC11C; &#xD3EC;&#xB9F7;&#xC774; wav &#xC778;&#xCF54;&#xB529; &#xC911; &#xD558;&#xB098;&#xC778; pcm&#xC73C;&#xB85C; &#xBCC0;&#xACBD;&#xB41C; &#xAC83;&#xC774;&#xB2E4;(&#xB2E4;&#xB9CC;, &#xD655;&#xC7A5;&#xC790;&#xBA85;&#xC740; wav..&#x1F62D;). &#xADF8;&#xB798;&#xC11C; pcm&#xC744; wav &#xD30C;&#xC77C;&#xB85C; &#xBCC0;&#xD658;&#xD558;&#xBA74; &#xBB38;&#xC81C;&#xAC00; &#xD574;&#xACB0;&#xB41C;&#xB2E4;!!</p><h1 id="&#xBCC0;&#xD658;-&#xD30C;&#xC77C;&#xCF54;&#xB4DC;"><a href="#&#xBCC0;&#xD658;-&#xD30C;&#xC77C;&#xCF54;&#xB4DC;" class="headerlink" title="&#xBCC0;&#xD658; &#xD30C;&#xC77C;&#xCF54;&#xB4DC;"></a>&#xBCC0;&#xD658; &#xD30C;&#xC77C;&#xCF54;&#xB4DC;</h1><p>&#xC5B4;&#xB5A4; &#xC790;&#xC0C1;&#xD55C; &#xBD84;&#xC774; &#xCF54;&#xB4DC;&#xB97C; &#xC9C1;&#xC811; &#xC9DC;&#xC8FC;&#xC154;&#xC11C; &#xADF8;&#xB300;&#xB85C; &#xAC00;&#xC838;&#xC654;&#xB2E4;. &#xCD9C;&#xCC98;&#xB294; &#xC544;&#xB798;&#xC5D0;</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> wave</span><br><span class="line"></span><br><span class="line"><span class="comment"># The parameters are prerequisite information. More specifically,</span></span><br><span class="line"><span class="comment"># channels, bit_depth, sampling_rate must be known to use this function.</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">pcm2wav</span>(<span class="params"> pcm_file, wav_file, channels=<span class="number">1</span>, bit_depth=<span class="number">16</span>, sampling_rate=<span class="number">16000</span> </span>):</span></span><br><span class="line"></span><br><span class="line">    <span class="comment"># Check if the options are valid.</span></span><br><span class="line">    <span class="keyword">if</span> bit_depth % <span class="number">8</span> != <span class="number">0</span>:</span><br><span class="line">        <span class="keyword">raise</span> ValueError(<span class="string">&quot;bit_depth &quot;</span>+<span class="built_in">str</span>(bit_depth)+<span class="string">&quot; must be a multiple of 8.&quot;</span>)</span><br><span class="line">        </span><br><span class="line">    <span class="comment"># Read the .pcm file as a binary file and store the data to pcm_data</span></span><br><span class="line">    <span class="keyword">with</span> <span class="built_in">open</span>( pcm_file, <span class="string">&apos;rb&apos;</span>) <span class="keyword">as</span> opened_pcm_file:</span><br><span class="line">        pcm_data = opened_pcm_file.read();</span><br><span class="line">        </span><br><span class="line">        obj2write = wave.<span class="built_in">open</span>( wav_file, <span class="string">&apos;wb&apos;</span>)</span><br><span class="line">        obj2write.setnchannels( channels )</span><br><span class="line">        obj2write.setsampwidth( bit_depth // <span class="number">8</span> )</span><br><span class="line">        obj2write.setframerate( sampling_rate )</span><br><span class="line">        obj2write.writeframes( pcm_data )</span><br><span class="line">        obj2write.close()</span><br><span class="line"></span><br><span class="line">pcm2wav( <span class="string">&apos;sample_001.pcm&apos;</span>, <span class="string">&apos;sample_001.wav&apos;</span>, <span class="number">1</span>, <span class="number">16</span>, <span class="number">16000</span> )</span><br></pre></td></tr></table></figure><h1 id="&#xCD9C;&#xCC98;"><a href="#&#xCD9C;&#xCC98;" class="headerlink" title="&#xCD9C;&#xCC98;"></a>&#xCD9C;&#xCC98;</h1><p><a href="https://m.blog.naver.com/PostView.nhn?blogId=aimldl&amp;logNo=221559323232&amp;proxyReferer=https://www.google.com/">pcm2wav.py</a></p>]]></content:encoded>
      
      
      <category domain="https://rimiiii.github.io/categories/PYTHON/">PYTHON</category>
      
      <category domain="https://rimiiii.github.io/categories/PYTHON/BUG-FIX/">BUG FIX</category>
      
      
      <category domain="https://rimiiii.github.io/tags/error/">error</category>
      
      <category domain="https://rimiiii.github.io/tags/ppm/">ppm</category>
      
      
      <comments>https://rimiiii.github.io/2021/06/11/error1/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>[책을 읽고] 미드나잇 라이브러리</title>
      <link>https://rimiiii.github.io/2021/06/09/midnight-library/</link>
      <guid>https://rimiiii.github.io/2021/06/09/midnight-library/</guid>
      <pubDate>Wed, 09 Jun 2021 05:25:29 GMT</pubDate>
      
      <description>&lt;p&gt;서점에 갔다가 별 생각 없이 집어든 책이 나에게 엄청 큰 행복과 깨달음을 주었다. 현재의 삶에 자신이 없고 후회하는 사람들에게 추천하는 책📚 &lt;/p&gt;</description>
      
      
      
      <content:encoded><![CDATA[<p>서점에 갔다가 별 생각 없이 집어든 책이 나에게 엄청 큰 행복과 깨달음을 주었다. 현재의 삶에 자신이 없고 후회하는 사람들에게 추천하는 책📚 </p><span id="more"></span><p>제일 중요한 것은 무엇을 보느냐가 아니라 어떨게 보느냐다. 내가 후회하던 것들을 다른 우주의 나는 행동했을거고 그 우주 속의 나는 나와는 같으면서도 다른 나일 것이다. 결국 나는 유일한 이 우주 속의 나이기 때문에 내 삶을 소중하게 여기고 나 스스로를 돌봐야한다.</p><h1 id="요약"><a href="#요약" class="headerlink" title="요약"></a>요약</h1><p>그저 그런 삶을 살고 있던 노라는 자신의 고양이인 볼테르가 죽고나서 자신도 죽음을 택한다. 삶과 죽음 사이에 있는 도서관이는 자신의 학창시절 사서 선생님이였던 엘름주인이 계셨다. 도서관의 책을 펼치면 직각 인생을 살 수 있다고 한다. </p><p>노라는 댄과 헤어진 것을 후회하고 있고 그 후회를 되돌리는 책을 펼쳤다. 그 삶 속에서의 노라는 행복하지 않았다. 댄은 바람을 폈고 술도 많이 마셨다. 노라가 기억하지 못했던 댄의 모습들이었다. 실망하는 순간 다시 자정의 도서관으로 돌아갔다. </p><p>노라는 이지를 따라가지 않은 것을 후회하고 있었고 이지를 따라가나는 삶을 펼쳐보았으나 그 곳에서 이지는 죽은 뒤었다. 그 다음은 아빠의 바람이었던 수영선수의 꿈을 포기하지 않는 삶을 펼쳐보았으나 그곳에선 아빠가 바람을 폈고 노라가 수영을 하느라 돌보지 못한 엄마는 일찍 생을 마감하였다.  </p><p>빙하학자의 삶을 살아본 노라는 자신이 결정한 삶의 마감이 아닌 다른 누군가(곰)의 결정이 될 뻔했을때 살고싶다는 욕구를 느꼈다. 이 삶으로 인해 부모님을 용서하게 된다. </p><p>빙하학자의 삶을 살고 있을때 노라와 같은 현상을 겪는 사람을 만났다. 그리 오래 대화하지는 못했지만. 그 다음 삶은 음악을 계속하는 것. 그 삶 속에서는 노라가 팬인 라이언 베일리와 짧게나마 연인 사이였고 그리 마음에 드는 상대는 아니었다. 노라는 트위터에 이런 글을 남겼다. “모든 것을 가지고도 아무 느낌이 없을 수 있다.“ </p><p>성공한 셀럽의 삶 속에서는 노라의 오빠가 약물 과다복용으로 사망한지 2년이 지난 후였고 노라가 다른 삶을 그만 살고 싶어할 때 엘름 부인은 체스판의 보잘것 없는 폰처럼 그저 앞으로 나아가라고 한다. 끝에 도달으면 다른 기물로 승급할 수 있다며. 노라는 남이 아닌 자신이 원하는 삶을 살아보고 싶어했다. </p><p>동물 보호소에서 일을 하는 삶 속에서의 노라를 살아봤으나 그 속에 있던 딜런(남자친구)을 그 삶을 살고 있던 노라에게 다시 돌려주고 싶었고 그 삶에서 떠났다. 그 다음 삶은 부부의 삶이였으나 뭐랄까.. 그저 그런 침묵들이 있는 삶이었고 노라는 바로 도서관으로 돌아갔다. </p><p>노라는 고양이 볼테르의 죽음을 알리러 온 애쉬의 호의를 수락하는 삶을 살게 됐다. 딸아이가 있었고 행복하고 완벽한 삶이었다. 그치만 이 삶이 자신의 삶이 아니라는 걸 알고 있었고 그 사실을 잊고 싶었다. </p><p>노라는 결국 다시 자정의 도서관으로 돌아갔다. 도서관은 무너지고 있었고 노라는 원래 자신의 삶으로 돌아가고 싶었다. 살아있고 싶었다. 원래의 삶으로 돌아간 노라는 모든게 달라졌다. 노라는 삶을 다르게 보고 있었다. 인간은 무한하다. 살아있는 동안 우리는 늘 다양한 가능성의 미래를 품고 있다. 노라가 소중하게 여긴 사람들을 만났고 애쉬에게도 어쩌면 커피한잔하자고 말할 수 있다. </p><h1 id="좋았던-구절들"><a href="#좋았던-구절들" class="headerlink" title="좋았던 구절들"></a>좋았던 구절들</h1><p>p56 SNS에 할애한 시간이 후회돼. 어릴 때 더 많이 놀지 못한 게 후회돼. 더 행복한 사람이 되는 법을 배우지 못한 게 후회돼. 죄책감을 너무 많이 느낀 게 후회돼. 꾸준히 건강 관리를 하지 않은 게 후회돼.</p><p>p74 사람은 도시와 같아서 마음에 덜 드는 부분이 몇 개 있다고 해서 전체를 거부할 순 없다. 위험해보이는 골목길이나 교외 등 마음에 안 드는 부분이 있을지라도 다른 장점이 그 도시를 가치 있게 만들어준다.</p><p>p92 “예측하기 힘들지? 무엇이 우리를 행복하게 해줄지 말이야.”</p><p>p187 “인간은 150명의 사람만 알고 지내도록 만들어졌어요. 인스타그램을 한 시간만 해도 150명은 만날 수 있어요. 건강하지 않아요! 뇌가 감당하지 못합니다. 그래서 우리가 그 어느 때보다 대면 소통을 갈망하는 거죠.”</p><p>p266 “다른 사람에게 상처를 주지 않고서는 살 수가 없는 것 같아요.” “원래 인생은 그런 거야”</p><p>p301 와인을 만들어 파는 부부의 이야기 -&gt; 이 삶 속에서는 이미 행복했던 순간(예를 들면, 아이를 키우는 일, 같이 목표를 이루는 일 등)들이 다 지나갔고 물론 지금 삶이 행복하지 않은 건 아니겠지만 그런 삶들이 있으니까 침묵 속에서도 평화로운게 아닐까?</p><p>p318 몇 년이나 놓쳐버린 삶에 어떻게 그냥 끼어들 수 있을까? 노라는 눈을 감았다. 다른 삶에서도 아이가 있었던 적이 있기는 했지만 모두 1, 2분 내로 끝나버렸다.</p><p>p361 노라가 한 일이라고 해봐야 인터넷 쇼핑몰을 깔아주고, 약국에서 약을 서너 번 타다 준것이 전부였다. 절대 사소한 것의 중요성을 과소평가하지 말라고 엘름 부인은 말했다. 그 말을 늘 명심해야 한다고.</p><h1 id="좋은-구절들"><a href="#좋은-구절들" class="headerlink" title="좋은 구절들"></a>좋은 구절들</h1><p>p67 참된 앎이란 자신의 무지를 아는 것이다. - 소크라테스(가 우리 펍의 퀴즈 게임에서 지고 난 후에 한 말!!!!)</p><p>p96 살아봐야만 배울 수 있다.</p><p>p127 “사소한 것의 중요성을 절대 과소평가하지 마라. 그 말을 늘 명심해야 해” -&gt; 나한테도 그냥 책을 사서 읽는 게 사소한 일이었는데 가끔은 엄청 소중하게 느껴진다.</p><p>p138 “내가 아닌 다른 사람이 되는 걸 목표로 한다면 반드시 실패합니다. 나 자신이 되는 걸 목표로 하세요. 나처럼 보이고 행동하고 생각하는 걸 목표로 하세요. 가장 ‘나다운 나’가 되는 걸 목표로 하세요. 나를 나로 만드는 모든 요소를 받아들이세요. 그걸 지지하세요. 사랑하세요. 갈고닦으세요. 사람들이 그걸 조롱하고 비웃을 때 휩쓸리지 마세요. 대부분의 험담은 사실 질투랍니다. 묵묵히 할 일을 하세요.”</p><p>p199 하지만 어쩌면 모든 삶이 다 그럴지 모른다. 겉보기에는 아주 흥미진진하거나 가치 있어 보이는 삶조차 결국에는 그런 기분이 들지 모른다. 실망과 단조로움과 마음의 상처와 경쟁만 한가득이고, 아름답고 경이로운 경험은 순간에 끝난다.</p><p>p219 내가 원하는 어떤 삶이든 살 수 있다는 걸 기억해야 합니다. 어떤 삶이든요. 꿈을 크게 가져요……. 당신은 원하는 건 무엇이든 될 수 있습니다. 그렇게 사는 삶이 존재하니까요.”</p><p>p258 매일 매 순간 우리는 새로운 우주로 들어가요. 자신을 타인 그리고 또 다른 자신과 비교하며 삶이 달라지기를 바라는 데 많은 시간을 보내죠. 사실 대부분의 삶에는 좋은 일과 나쁜 일이 공존하는데 말이에요.”<br>“한 삶에만 갇혀 있는 동안에는 슬픔이나 비극 혹은 실패나 두려움이 그 삶을 산 결과라고 생각하기 쉽죠. 그런 것들은 단순히 삶의 부산물일 뿐인데 우리는 그게 특정한 방식으로 살았기 때문에 생겨났다고 생각해요. 하지만 슬픔이 없는 삶은 없다는 걸 이해하면 사는 게 훨씬 쉬어질 거에요. 슬픔은 본질적으로 행복의 일부라는 사실도요. 슬픔 없이 행복을 얻을 수는 없어요. 물론 사람마다 그 정도돠 양이 다르긴 하겠죠. 하지만 영원히 순수한 행복에만 머물 수 있는 삶은 없어요. 그런 삶이 있다고 생각하면, 현재의 삶이 더 불행해지게 느껴질 뿐이요.”</p><p>p269 “경기는 끝날 때까지 끝난 게 아니야. 넌 그걸 깨달아야 해. 체스판에 폰이 하나라도 남아 있으면 경기는 끝난 게 아니야. 한 사람은 폰 하나와 킹 하나만 남고, 다른 사람은 기물이 다 있어도 경기는 아직 진행 중인 거야. 설사 네가 폰이라고 해도, 아마 우리 모두 그럴테지만, 넌 폰이 가장 마법 같은 기물이라는 사실을 기억해야 해. 폰은 하찮고 평범해 보이지만 사실은 그렇지 않아. 왜나하면 폰은 절대 그냥 폰이 아니니까. 폰은 차기 퀸이야. 넌 그저 계속 앞으로 나아갈 방법만 찾으면 돼. 한 칸 한 칸 앞으로 나아가는 거야. 그러다 반대편 끝에 도달하면 얼마든지 다른 기물로 승급할 수 있어.”</p><p>p313 “우리가 경험하는 모든 것은 결국 그것에 대한 우리의 인식일 뿐이야. ‘중요한 건 무엇을 보느냐가 아니라 어떻게 보느냐’지.”</p><p>p299 “있잖아, 오빠. 인생은 이해하는 게 아니야. 그냥 사는 거야.”</p><p>행동하고 싶은 구절들<br>p275 “하지만 형제나 남매간의 경쟁은 당사자들보다 부모 때문이라고들 하죠. 전 늘 부모님이 오빠의 꿈을 좀 더 응원한다고 느꼈어요.” </p><p>p353 이번 삶에서도 부모님은 돌아가셨지만 그녀에게는 몰리가 있었고, 애쉬가 있었고, 조가 있었다. 그녀가 추락하지 않게 받쳐주는 사랑의 그물망이 있었다. </p><p>p384 그녀가 가진 단 하나의 진실이자, 이제는 너무나 자랑스럽고 기쁜 진실, 타협하게 되었을 뿐 아니라 온몸의 세포 하나하나가 대놓고 환영하는 진실이었따. 노라는 그 진실을 서둘러, 하지만 종이 위로 펜촉을 꾹꾹 눌러가면서 확실히 적었따. 대문자, 일인칭 현재 시제로.<br>그녀에게 가능한 모든 인생의 씨앗이자 시작인 진실. 예전에는 저주였으나 이제는 축복이 된 진실.<br>다중 우주의 잠재력과 힘이 간직한 간단한 문장이었다.<br>나는 살아 있다.</p><p>p392 우리는 한 사람이기만 하면 된다. 한 존재만 느끼면 된다. 모든 것이 되기 위해 모든 일을 할 필요는 없다. 왜냐하면 우리는 이미 무한하기 때문이다. 살아 있는 동안 우리는 늘 다양한 가능성의 미래를 품고 있다.</p>]]></content:encoded>
      
      
      <category domain="https://rimiiii.github.io/categories/REVIEW/">REVIEW</category>
      
      <category domain="https://rimiiii.github.io/categories/REVIEW/BOOK/">BOOK</category>
      
      
      <category domain="https://rimiiii.github.io/tags/book/">book</category>
      
      <category domain="https://rimiiii.github.io/tags/review/">review</category>
      
      
      <comments>https://rimiiii.github.io/2021/06/09/midnight-library/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>[Python/백준] 1065번 한수</title>
      <link>https://rimiiii.github.io/2021/05/27/baekjoon7/</link>
      <guid>https://rimiiii.github.io/2021/05/27/baekjoon7/</guid>
      <pubDate>Thu, 27 May 2021 14:12:29 GMT</pubDate>
      
      <description>&lt;p&gt;어떤 양의 정수 X의 각 자리가 등차수열을 이룬다면, 그 수를 한수라고 한다. 등차수열은 연속된 두 개의 수의 차이가 일정한 수열을 말한다. N이 주어졌을 때, 1보다 크거나 같고, N보다 작거나 같은 한수의 개수를 출력하는 프로그램을 작성하시오.&lt;/p&gt;</description>
      
      
      
      <content:encoded><![CDATA[<p>어떤 양의 정수 X의 각 자리가 등차수열을 이룬다면, 그 수를 한수라고 한다. 등차수열은 연속된 두 개의 수의 차이가 일정한 수열을 말한다. N이 주어졌을 때, 1보다 크거나 같고, N보다 작거나 같은 한수의 개수를 출력하는 프로그램을 작성하시오.</p><span id="more"></span><h1 id="입력"><a href="#입력" class="headerlink" title="입력"></a>입력</h1><p>첫째 줄에 1,000보다 작거나 같은 자연수 N이 주어진다.</p><h1 id="출력"><a href="#출력" class="headerlink" title="출력"></a>출력</h1><p>첫째 줄에 1보다 크거나 같고, N보다 작거나 같은 한수의 개수를 출력한다.</p><h1 id="풀이"><a href="#풀이" class="headerlink" title="풀이"></a>풀이</h1><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">N = <span class="built_in">int</span>(<span class="built_in">input</span>()) </span><br><span class="line"><span class="keyword">if</span> N &lt;= <span class="number">99</span>: </span><br><span class="line">    <span class="built_in">print</span>(N) </span><br><span class="line"><span class="keyword">else</span>: count = <span class="number">99</span> </span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">100</span>, N+<span class="number">1</span>): </span><br><span class="line">    fst_value = <span class="built_in">int</span>(<span class="built_in">str</span>(i)[<span class="number">1</span>]) - <span class="built_in">int</span>(<span class="built_in">str</span>(i)[<span class="number">0</span>]) </span><br><span class="line">    sec_value = <span class="built_in">int</span>(<span class="built_in">str</span>(i)[<span class="number">2</span>]) - <span class="built_in">int</span>(<span class="built_in">str</span>(i)[<span class="number">1</span>]) </span><br><span class="line">    <span class="keyword">if</span> fst_value == sec_value: </span><br><span class="line">        count += <span class="number">1</span> </span><br><span class="line">    <span class="keyword">else</span>: <span class="keyword">pass</span> </span><br><span class="line"><span class="built_in">print</span>(count) </span><br></pre></td></tr></table></figure><p>이 문제는 풀이는 어렵지 않으나 문제의 뜻을 이해 못했다..문제의 뜻을 설명하자면 숫자 자체가 등차수열로 이루어져있는 것들만 찾는 것이다. 예를 들면, 135처럼 2를 공차로 둔 것이다. 99까지는 당연히 2개의 숫자로 이루어져있기 때문에 등차수열로 이루어져있는 한수이다. 그래서 99 이전의 숫자인 경우는 숫자 그자체가 한수의 갯수가 된다. 100이 넘어가는 숫자들부터는 백의자리 숫자와 십의자리 숫자를 뺀 값과 십의자리 숫자와 일의자리 숫자를 뺀 값이 같은 경우의 숫자들만 count하였다. 덧붙이자면 이 값이 공차가 된다.</p>]]></content:encoded>
      
      
      <category domain="https://rimiiii.github.io/categories/ALGORITHM/">ALGORITHM</category>
      
      <category domain="https://rimiiii.github.io/categories/ALGORITHM/BAEKJOON/">BAEKJOON</category>
      
      
      <category domain="https://rimiiii.github.io/tags/algorithm/">algorithm</category>
      
      <category domain="https://rimiiii.github.io/tags/python/">python</category>
      
      
      <comments>https://rimiiii.github.io/2021/05/27/baekjoon7/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>[Python/백준] 4673번 셀프 넘버</title>
      <link>https://rimiiii.github.io/2021/05/27/baekjoon5/</link>
      <guid>https://rimiiii.github.io/2021/05/27/baekjoon5/</guid>
      <pubDate>Thu, 27 May 2021 12:06:29 GMT</pubDate>
      
      <description>&lt;p&gt;10000보다 작거나 같은 셀프 넘버를 한 줄에 하나씩 출력하는 프로그램을 작성하시오.&lt;/p&gt;</description>
      
      
      
      <content:encoded><![CDATA[<p>10000보다 작거나 같은 셀프 넘버를 한 줄에 하나씩 출력하는 프로그램을 작성하시오.</p><span id="more"></span><p>셀프 넘버는 1949년 인도 수학자 D.R. Kaprekar가 이름 붙였다. 양의 정수 n에 대해서 d(n)을 n과 n의 각 자리수를 더하는 함수라고 정의하자. 예를 들어, d(75) = 75+7+5 = 87이다.양의 정수 n이 주어졌을 때, 이 수를 시작해서 n, d(n), d(d(n)), d(d(d(n))), …과 같은 무한 수열을 만들 수 있다. 예를 들어, 33으로 시작한다면 다음 수는 33 + 3 + 3 = 39이고, 그 다음 수는 39 + 3 + 9 = 51, 다음 수는 51 + 5 + 1 = 57이다. 이런식으로 다음과 같은 수열을 만들 수 있다. 33, 39, 51, 57, 69, 84, 96, 111, 114, 120, 123, 129, 141, … n을 d(n)의 생성자라고 한다. 위의 수열에서 33은 39의 생성자이고, 39는 51의 생성자, 51은 57의 생성자이다. 생성자가 한 개보다 많은 경우도 있다. 예를 들어, 101은 생성자가 2개(91과 100) 있다. 생성자가 없는 숫자를 셀프 넘버라고 한다. 100보다 작은 셀프 넘버는 총 13개가 있다. 1, 3, 5, 7, 9, 20, 31, 42, 53, 64, 75, 86, 97</p><h1 id="입력"><a href="#입력" class="headerlink" title="입력"></a>입력</h1><p>입력은 없다.</p><h1 id="출력"><a href="#출력" class="headerlink" title="출력"></a>출력</h1><p>10,000보다 작거나 같은 셀프 넘버를 한 줄에 하나씩 증가하는 순서로 출력한다.</p><h1 id="풀이"><a href="#풀이" class="headerlink" title="풀이"></a>풀이</h1><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">original_set = <span class="built_in">set</span>(<span class="built_in">range</span>(<span class="number">1</span>, <span class="number">10001</span>))</span><br><span class="line">generated_set = <span class="built_in">set</span>()</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">1</span>, <span class="number">10001</span>):</span><br><span class="line">  <span class="keyword">for</span> j <span class="keyword">in</span> <span class="built_in">str</span>(i):</span><br><span class="line">    i += <span class="built_in">int</span>(j)</span><br><span class="line">  generated_set.add(i)</span><br><span class="line"></span><br><span class="line">self_num = <span class="built_in">sorted</span>(original_set - generated_set)</span><br><span class="line"><span class="keyword">for</span> num <span class="keyword">in</span> self_num:</span><br><span class="line">  <span class="built_in">print</span>(num)</span><br></pre></td></tr></table></figure><p>숫자들의 각각의 자릿수를 끄집어내는 것은 str을 이용할 수 있다. 예를 들어 33이라면 str(33)으로 ‘33’으로 string 형태로 만든 뒤 for문을 이용하면 하나의 숫자씩 끄집어내는 것이 가능하다.</p>]]></content:encoded>
      
      
      <category domain="https://rimiiii.github.io/categories/ALGORITHM/">ALGORITHM</category>
      
      <category domain="https://rimiiii.github.io/categories/ALGORITHM/BAEKJOON/">BAEKJOON</category>
      
      
      <category domain="https://rimiiii.github.io/tags/algorithm/">algorithm</category>
      
      <category domain="https://rimiiii.github.io/tags/python/">python</category>
      
      
      <comments>https://rimiiii.github.io/2021/05/27/baekjoon5/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>[Python/백준] 10818번 최소, 최대</title>
      <link>https://rimiiii.github.io/2021/05/27/baekjoon6/</link>
      <guid>https://rimiiii.github.io/2021/05/27/baekjoon6/</guid>
      <pubDate>Thu, 27 May 2021 12:06:29 GMT</pubDate>
      
      <description>&lt;p&gt;N개의 정수가 주어진다. 이때, 최솟값과 최댓값을 구하는 프로그램을 작성하시오.&lt;/p&gt;</description>
      
      
      
      <content:encoded><![CDATA[<p>N개의 정수가 주어진다. 이때, 최솟값과 최댓값을 구하는 프로그램을 작성하시오.</p><span id="more"></span><h1 id="입력"><a href="#입력" class="headerlink" title="입력"></a>입력</h1><p>첫째 줄에 정수의 개수 N (1 ≤ N ≤ 1,000,000)이 주어진다. 둘째 줄에는 N개의 정수를 공백으로 구분해서 주어진다. 모든 정수는 -1,000,000보다 크거나 같고, 1,000,000보다 작거나 같은 정수이다.</p><h1 id="출력"><a href="#출력" class="headerlink" title="출력"></a>출력</h1><p>첫째 줄에 주어진 정수 N개의 최솟값과 최댓값을 공백으로 구분해 출력한다.</p><h1 id="풀이"><a href="#풀이" class="headerlink" title="풀이"></a>풀이</h1><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> sys</span><br><span class="line">N = <span class="built_in">int</span>(sys.stdin.readline())</span><br><span class="line">number_list = sys.stdin.readline().split()</span><br><span class="line">number_int = []</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> number_list:</span><br><span class="line">    number_int.append(<span class="built_in">int</span>(i))</span><br><span class="line"><span class="built_in">print</span>(<span class="built_in">min</span>(number_int), <span class="built_in">max</span>(number_int))</span><br></pre></td></tr></table></figure><p>2번의 시도를 했을때 런타임 에러가 나왔는데 이럴땐 sys.stdin.readline()을 이용해서 빠르게 불러오면 해결할 수 있다.</p>]]></content:encoded>
      
      
      <category domain="https://rimiiii.github.io/categories/ALGORITHM/">ALGORITHM</category>
      
      <category domain="https://rimiiii.github.io/categories/ALGORITHM/BAEKJOON/">BAEKJOON</category>
      
      
      <category domain="https://rimiiii.github.io/tags/algorithm/">algorithm</category>
      
      <category domain="https://rimiiii.github.io/tags/python/">python</category>
      
      
      <comments>https://rimiiii.github.io/2021/05/27/baekjoon6/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>#1. EHR 데이터를 이용한 이벤트 예측 프로젝트</title>
      <link>https://rimiiii.github.io/2021/05/11/event-prediction/</link>
      <guid>https://rimiiii.github.io/2021/05/11/event-prediction/</guid>
      <pubDate>Tue, 11 May 2021 14:16:29 GMT</pubDate>
      
      <description>&lt;p&gt;EHR 데이터를 이용하여 이벤트를 예측하는 프로젝트를 진행하려합니다. 사용할 데이터는 ICU 데이터이며 오픈소스인 &lt;code&gt;MIMIC3&lt;/code&gt;입니다. 어떤 이벤트를 예측할지 아직 고민중이고 우선적으로 MIMIC3의 주요 컬럼들을 리뷰하였습니다. &lt;/p&gt;</description>
      
      
      
      <content:encoded><![CDATA[<p>EHR 데이터를 이용하여 이벤트를 예측하는 프로젝트를 진행하려합니다. 사용할 데이터는 ICU 데이터이며 오픈소스인 <code>MIMIC3</code>입니다. 어떤 이벤트를 예측할지 아직 고민중이고 우선적으로 MIMIC3의 주요 컬럼들을 리뷰하였습니다. </p><span id="more"></span><p>이 컬럼들 중에서 필요한 것들과 그렇지 않은 것들을 걸러내야되고 어떤 이벤트를 예측할지는 논문을 읽으며 결정할 것입니다. MIMIC3의 주요 컬럼들은 아래와 같습니다. 의료 도메인이 아니기 때문에 이해가 안가는 컬럼들과 잘못 해석한 것들이 있을 수 있습니다. 혹시나 첨언해주실 분이 있으면 정말 감사하겠습니다😆</p><p>MIMIC 데이터베이스 문서 링크: <a href="https://mimic.physionet.org/about/mimic/">https://mimic.physionet.org/about/mimic/</a></p><h1 id="MIMIC3-주요-컬럼-리뷰"><a href="#MIMIC3-주요-컬럼-리뷰" class="headerlink" title="MIMIC3 주요 컬럼 리뷰"></a>MIMIC3 주요 컬럼 리뷰</h1><h2 id="ADMISSION"><a href="#ADMISSION" class="headerlink" title="ADMISSION"></a>ADMISSION</h2><ul><li>ROW_ID</li><li>SUBJECT_ID: PATIENTS 테이블과 연결할 수 있는 key값</li><li>HADM_ID: key값</li><li>ADMITTIME: 환자가 병원에서 입원한 날짜와 시간</li><li>DISCHTIME: 환자가 병원에서 퇴원한 날짜와 시간</li><li>DEATHTIME: 환자가 사망했을 경우 사망 날짜와 시간</li><li>ADMISSION_TYPE(urgent랑 emergency랑 뭐가 다름?)</li><li>ELECTIVE: 계획된 입원</li><li>URGENT: 긴급 입원</li><li>NEWBORN: 출생</li><li>EMERGENCY: 응급</li><li>INSURANCE: 보험 청구</li><li>private</li><li>medicare</li><li>EDREGTIME: emergency department에서 등록된 시간</li><li>EDOUTTIME: emergency department에서 퇴원한 시간</li><li>DIAGNOSIS: 진단</li><li>HOSPITAL_EXPIRE_FLAG: 사망했을 경우 1, 생존했을 경우 0</li><li>HAS_CHARTEVENTS_DATA</li></ul><h2 id="D-ICD-DIAGNOSES"><a href="#D-ICD-DIAGNOSES" class="headerlink" title="D_ICD_DIAGNOSES"></a>D_ICD_DIAGNOSES</h2><p>ICD9 진단코드</p><ul><li>ROW_ID</li><li>ICD9_CODE</li><li>SHORT_TITLE</li><li>LONG_TITLE</li></ul><h2 id="D-ICD-PROCEDURES"><a href="#D-ICD-PROCEDURES" class="headerlink" title="D_ICD_PROCEDURES"></a>D_ICD_PROCEDURES</h2><p>ICD9 처치코드</p><ul><li>ROW_ID</li><li>ICD9_CODE</li><li>SHORT_TITLE</li><li>LONG_TITLE</li></ul><h2 id="D-ITEMS"><a href="#D-ITEMS" class="headerlink" title="D_ITEMS"></a>D_ITEMS</h2><p>ICU 데이터베이스 안의 모든 아이템 정의. 2개의 다른 ICU 데이터베이스들이 합쳐지면서 같은 의미지만 다른 이름으로 쓰이는 것들이 존재함. 결과적으로 ITEMID는 다르지만 하나의 concept(LABEL)로 되어있다.<br>LINKSTO가 null값인 경우는 현재 이용불가능한 데이터이며 release될 예정이다.</p><ul><li>ROW_ID</li><li>ITEMID</li><li>LABEL: ITEMID로부터 재정의된 concept</li><li>ABBREVIATION: label의 약자, metavision인 경우에만 이용가능함</li><li>DBSOURCE</li><li>carevue</li><li>metavision</li><li>hospital</li><li>CATEGORY: ITEMID가 해당하는 데이터 유형, 예를 들어 ABG의 경우 정맥 주사를 하기 때문에 IV Medication</li><li>UNITNAME: ITEMID의 측정단위</li><li>PARAM_TYPE: 기록된 데이터의 타입(날짜, 숫자, 텍스트 등)</li><li>CONCEPTID</li></ul><h2 id="D-LABITEMS"><a href="#D-LABITEMS" class="headerlink" title="D_LABITEMS"></a>D_LABITEMS</h2><p>Labitem 정보들</p><ul><li>ROW_ID</li><li>ITEM_ID</li><li>LABEL</li><li>FLUID: 액체 카테고리로 보임(복수, 뇌척수액 등)</li><li>CATEGORY: 검사종류(hematology, blood gas, chemistry)</li><li>LOINC_CODE</li></ul><h2 id="DIAGNOSES-ICD"><a href="#DIAGNOSES-ICD" class="headerlink" title="DIAGNOSES_ICD"></a>DIAGNOSES_ICD</h2><p>ICD9 기반</p><ul><li>SUBJECT_ID: 환자 ID</li><li>HADM_ID: 환자입원 ID</li><li>SEQ_NUM: 질병 우선순위 순서</li></ul><h2 id="DRGCODES"><a href="#DRGCODES" class="headerlink" title="DRGCODES"></a>DRGCODES</h2><p>입원ID별로 심각성을 알 수 있음<br>진단 관련 그룹 코드, 포괄수가제(입원해서 퇴원할 때까지 발생하는 진료에 대해 질병마다 미리 정해진 금액을 내는 제도)</p><ul><li>DRG_TYPE: HCFA/MS/APR</li><li>DRG_CODE: 진단 금액 코드</li><li>DESCRIPTION: drg code 요약글</li><li>DRG_SEVERITY: drg 심각성, 심각한 경우 더 높은 청구 비용을 허용함</li><li>DRG_MORTALITY: 사망률</li></ul><h2 id="LABEVENTS"><a href="#LABEVENTS" class="headerlink" title="LABEVENTS"></a>LABEVENTS</h2><p>measurements기반의 laboratory 데이터</p><ul><li>SUBJECT_ID</li><li>HADM_ID</li><li>ITEM_ID</li><li>CHARTTIME</li><li>VALUE: measure값</li><li>VALUENUM: value가 numeric인 경우 numeric format으로 기재되어있음</li><li>VALUEUOM: value의 단위</li><li>FLAG: value가 abnormal인지 아닌지(delta가 무슨의미인지 확인할것)</li></ul><h2 id="MICROBIOLOGYEVENTS"><a href="#MICROBIOLOGYEVENTS" class="headerlink" title="MICROBIOLOGYEVENTS"></a>MICROBIOLOGYEVENTS</h2><p>미생물학정보<br>ABTEST: a: control, b: treatment</p><ul><li>SUBJECT_ID</li><li>HADM_ID</li><li>CHARTDATE: 차트날짜</li><li>CHARTTIME: 차트날짜+시간</li><li>SPEC_ITEMID: specimen itemid</li><li>SPEC_TYPE_DESC</li><li>ORG_ITEM_ID</li><li>ORG_NAME: 조직이름</li><li>ISOLATE_NUM</li><li>AB_ITEMID</li><li>AB_NAME</li><li>DILUTION_TEXT: 비교정보 텍스트</li><li>DILUTION_COMPARISON</li><li>DILUTION_VALUE</li><li>INTERPRETATION</li></ul><h2 id="PATIENTS"><a href="#PATIENTS" class="headerlink" title="PATIENTS"></a>PATIENTS</h2><ul><li>SUBJECT_ID</li><li>GENDER</li><li>DOB: date of birth</li><li>DOD: date of death</li><li>DOD_HOSP: 병원에서 기록된 사망 날짜</li><li>DOD_SSN: social security database에서 기록된 사망 날짜</li><li>EXPIRE_FLAG: 사망했을 경우 1, 아닐 경우 0</li></ul><h2 id="PRESCRIPTIONS"><a href="#PRESCRIPTIONS" class="headerlink" title="PRESCRIPTIONS"></a>PRESCRIPTIONS</h2><ul><li>ROW_ID</li><li>SUBJECT_ID</li><li>HADM_ID</li><li>ICUSTAY_ID</li><li>STARTDATE</li><li>ENDDATE</li><li>DRUG_TYPE: MAIN, BASE, ADDITIVE가 있음</li><li>DRUG_NAME</li><li>DRUG_NAME_POE: DRUG_NAME과 같거나 nan이거나</li><li>DRUG_NAME_GENERIC</li><li>FORMULARY_DRUG_CD, GSN, NDC: 다른 drug code</li><li>GSN: Generic Sequence Number</li><li>NDC: National Drug Code</li><li>PROD_STRENGTH: 약물의 단위별 용량</li><li>DOSE_VAL_RX: 처방한 용량 값</li><li>DOSE_UNIT_RX: 처방한 용량 단위</li><li>FORM_VAL_DISP: 처방된 용량을 맞추기 위해 처방된 갯수</li><li>FROM_UNIT_DISP</li><li>ROUTE: 약물이 들어가는 루트</li><li>PROD_STRENGH * FORM_VAL_DISP  = DOSE_VAL_RX</li></ul><h2 id="PROCEDUREEVENTS-MV"><a href="#PROCEDUREEVENTS-MV" class="headerlink" title="PROCEDUREEVENTS_MV"></a>PROCEDUREEVENTS_MV</h2><p>설명이 없음..procedure가 metavision인 경우 이곳에 추가 데이터가 저장되어있는 것으로 보임</p><ul><li>ROW_ID</li><li>SUBJECT_ID</li><li>HADM_ID</li><li>ICUSTAY_ID</li><li>STARTTIME</li><li>ENDTIME</li><li>ITEMID</li><li>VALUE</li><li>VALUEUOM</li><li>LOCATION</li><li>LOCATIONCATEGORY</li><li>STORETIME</li><li>CGID</li><li>ORDERID</li><li>LINKORDERID</li><li>ORDER CATEGORY NAME</li><li>SECONDARY ORDER CATEROY NANE</li><li>ORDER CATEGORY DESCRIPTION</li><li>ISOPENBAG</li><li>CONTINUE IN NEXT DEPT</li><li>CANCEL REASON</li><li>STATUS DESCRIPTION</li><li>COMMENTS_DITDBY</li><li>COMMENTS_CANCELEDBY</li><li>COMMENTS_DATE</li></ul><h2 id="PROCEDURES-ICD"><a href="#PROCEDURES-ICD" class="headerlink" title="PROCEDURES_ICD"></a>PROCEDURES_ICD</h2><ul><li>SUBJECT_ID</li><li>HADM_ID</li><li>SEQ_NUM: 우선순위</li><li>ICD9_CODE: procedure code, D_ICD_PROCEDURES와 join 가능</li></ul>]]></content:encoded>
      
      
      <category domain="https://rimiiii.github.io/categories/DEEP-LEARNING/">DEEP LEARNING</category>
      
      <category domain="https://rimiiii.github.io/categories/DEEP-LEARNING/HEALTHCARE/">HEALTHCARE</category>
      
      
      <category domain="https://rimiiii.github.io/tags/ehr/">ehr</category>
      
      <category domain="https://rimiiii.github.io/tags/prediction/">prediction</category>
      
      
      <comments>https://rimiiii.github.io/2021/05/11/event-prediction/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>[Python/백준] 4344번 평균은 넘겠지</title>
      <link>https://rimiiii.github.io/2021/05/06/baekjoon4/</link>
      <guid>https://rimiiii.github.io/2021/05/06/baekjoon4/</guid>
      <pubDate>Thu, 06 May 2021 14:22:29 GMT</pubDate>
      
      <description>&lt;p&gt;대학생 새내기들의 90%는 자신이 반에서 평균은 넘는다고 생각한다. 당신은 그들에게 슬픈 진실을 알려줘야 한다.&lt;/p&gt;</description>
      
      
      
      <content:encoded><![CDATA[<p>대학생 새내기들의 90%는 자신이 반에서 평균은 넘는다고 생각한다. 당신은 그들에게 슬픈 진실을 알려줘야 한다.</p><span id="more"></span><h1 id="입력"><a href="#입력" class="headerlink" title="입력"></a>입력</h1><p>첫째 줄에는 테스트 케이스의 개수 C가 주어진다. 둘째 줄부터 각 테스트 케이스마다 학생의 수 N(1 ≤ N ≤ 1000, N은 정수)이 첫 수로 주어지고, 이어서 N명의 점수가 주어진다. 점수는 0보다 크거나 같고, 100보다 작거나 같은 정수이다.</p><h1 id="출력"><a href="#출력" class="headerlink" title="출력"></a>출력</h1><p>각 케이스마다 한 줄씩 평균을 넘는 학생들의 비율을 반올림하여 소수점 셋째 자리까지 출력한다.</p><h1 id="문제풀이"><a href="#문제풀이" class="headerlink" title="문제풀이"></a>문제풀이</h1><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">C = <span class="built_in">int</span>(<span class="built_in">input</span>())</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(C):</span><br><span class="line">  N_scores = <span class="built_in">list</span>(<span class="built_in">map</span>(<span class="built_in">int</span>, <span class="built_in">input</span>().split()))</span><br><span class="line">  N = N_scores[<span class="number">0</span>]</span><br><span class="line">  scores = N_scores[<span class="number">1</span>:]</span><br><span class="line">  average = <span class="built_in">sum</span>(scores)/N</span><br><span class="line">  larger = <span class="built_in">len</span>(<span class="built_in">list</span>(<span class="built_in">filter</span>(<span class="keyword">lambda</span> x: x&gt;average, scores)))</span><br><span class="line">  number = <span class="built_in">round</span>(larger/N*<span class="number">100</span>, <span class="number">3</span>)</span><br><span class="line">  <span class="built_in">print</span>(<span class="string">&quot;&#123;:.3f&#125;%&quot;</span>.<span class="built_in">format</span>(number))</span><br></pre></td></tr></table></figure><p>list 안의 값들 중 평균값보다 큰 값들만 구하기 위해서는 filter를 사용하면 되고 소숫점 셋째자리까지 나타내었을때 0을 추가로 넣고 싶다면 {:.3f}로 표기하면 되는데 소숫점 뒤에 3자리까지 0으로 채운다는 의미이다.</p>]]></content:encoded>
      
      
      <category domain="https://rimiiii.github.io/categories/ALGORITHM/">ALGORITHM</category>
      
      <category domain="https://rimiiii.github.io/categories/ALGORITHM/BAEKJOON/">BAEKJOON</category>
      
      
      <category domain="https://rimiiii.github.io/tags/book/">book</category>
      
      <category domain="https://rimiiii.github.io/tags/review/">review</category>
      
      
      <comments>https://rimiiii.github.io/2021/05/06/baekjoon4/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>참고할만한 노션 템플릿 모음</title>
      <link>https://rimiiii.github.io/2021/04/30/notion-template/</link>
      <guid>https://rimiiii.github.io/2021/04/30/notion-template/</guid>
      <pubDate>Fri, 30 Apr 2021 03:39:29 GMT</pubDate>
      
      <description>&lt;p&gt;참고하기 좋은 노션 템플릿 모아두기&lt;/p&gt;</description>
      
      
      
      <content:encoded><![CDATA[<p>참고하기 좋은 노션 템플릿 모아두기</p><span id="more"></span><h2 id="템플릿"><a href="#템플릿" class="headerlink" title="템플릿"></a>템플릿</h2><p><a href="https://blog.naver.com/shryu1221"><code>맘퍼스트</code></a><br><a href="https://s20202.tistory.com/category/%EC%83%9D%EC%82%B0%EC%84%B1%20%ED%88%B4/%EB%85%B8%EC%85%98%20notion"><code>패드쓰는 단호박</code></a></p><h2 id="꾸미기용-사이트"><a href="#꾸미기용-사이트" class="headerlink" title="꾸미기용 사이트"></a>꾸미기용 사이트</h2><p><a href="https://giphy.com/"><code>giphy</code></a></p>]]></content:encoded>
      
      
      <category domain="https://rimiiii.github.io/categories/REFERENCE/">REFERENCE</category>
      
      
      <category domain="https://rimiiii.github.io/tags/notion/">notion</category>
      
      
      <comments>https://rimiiii.github.io/2021/04/30/notion-template/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>참고할만한 기술 블로그 모음</title>
      <link>https://rimiiii.github.io/2021/04/29/tech-blog/</link>
      <guid>https://rimiiii.github.io/2021/04/29/tech-blog/</guid>
      <pubDate>Thu, 29 Apr 2021 03:49:29 GMT</pubDate>
      
      <description>&lt;p&gt;참고하기 좋은 기술 블로그 모아두기&lt;/p&gt;</description>
      
      
      
      <content:encoded><![CDATA[<p>&#xCC38;&#xACE0;&#xD558;&#xAE30; &#xC88B;&#xC740; &#xAE30;&#xC220; &#xBE14;&#xB85C;&#xADF8; &#xBAA8;&#xC544;&#xB450;&#xAE30;</p><span id="more"></span><h2 id="&#xAE30;&#xC5C5;-&#xBE14;&#xB85C;&#xADF8;"><a href="#&#xAE30;&#xC5C5;-&#xBE14;&#xB85C;&#xADF8;" class="headerlink" title="&#xAE30;&#xC5C5; &#xBE14;&#xB85C;&#xADF8;"></a>&#xAE30;&#xC5C5; &#xBE14;&#xB85C;&#xADF8;</h2><p><a href="https://blog.banksalad.com/tech/"><code>&#xBC45;&#xD06C;&#xC0D0;&#xB7EC;&#xB4DC;</code></a><br><a href="https://medium.com/daangn"><code>&#xB2F9;&#xADFC;&#xB9C8;&#xCF13;</code></a><br><a href="https://woowabros.github.io/"><code>&#xC6B0;&#xC544;&#xD55C;&#xD615;&#xC81C;&#xB4E4;</code></a><br><a href="https://blog.lunit.io/"><code>&#xB8E8;&#xB2DB;</code></a><br><a href="https://blog.linewalks.com/"><code>&#xB77C;&#xC778;&#xC6CD;&#xC2A4;</code></a><br><a href="https://kakaoenterprise.github.io/papers/"><code>&#xCE74;&#xCE74;&#xC624; &#xC5D4;&#xD130;&#xD504;&#xB77C;&#xC774;&#xC988;</code></a></p><h2 id="&#xAC1C;&#xC778;-&#xBE14;&#xB85C;&#xADF8;"><a href="#&#xAC1C;&#xC778;-&#xBE14;&#xB85C;&#xADF8;" class="headerlink" title="&#xAC1C;&#xC778; &#xBE14;&#xB85C;&#xADF8;"></a>&#xAC1C;&#xC778; &#xBE14;&#xB85C;&#xADF8;</h2><p><a href="https://blossominkyung.com/"><code>blossominkyung</code></a><br><a href="https://tech.oliveyoung.co.kr/"><code>&#xC62C;&#xB9AC;&#xBE0C;&#xC601;</code></a><br><a href="https://baeseongsu.github.io/"><code>Seongsu</code></a><br><a href="https://harrydrippin.github.io/"><code>Seunghwan Hong</code></a><br><a href="https://wansook0316.github.io/"><code>&#xC5D0;&#xADF8;&#xBA38;&#xB2C8;</code></a><br><a href="https://mishka.kr/"><code>Mishka&apos;s Blog</code></a><br><a href="https://sgc109.github.io/"><code>Sungho&apos;s Blog</code></a><br><a href="https://dschloe.github.io/"><code>dschloe</code></a></p>]]></content:encoded>
      
      
      <category domain="https://rimiiii.github.io/categories/REFERENCE/">REFERENCE</category>
      
      
      <category domain="https://rimiiii.github.io/tags/blog/">blog</category>
      
      
      <comments>https://rimiiii.github.io/2021/04/29/tech-blog/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>[Python/백준] 8958번 OX퀴즈</title>
      <link>https://rimiiii.github.io/2021/04/19/baekjoon3/</link>
      <guid>https://rimiiii.github.io/2021/04/19/baekjoon3/</guid>
      <pubDate>Mon, 19 Apr 2021 13:21:29 GMT</pubDate>
      
      <description>&lt;p&gt;다음과 같은 OX퀴즈의 결과가 주어졌을 때, 점수를 구하는 프로그램을 작성하시오.&lt;/p&gt;</description>
      
      
      
      <content:encoded><![CDATA[<p>다음과 같은 OX퀴즈의 결과가 주어졌을 때, 점수를 구하는 프로그램을 작성하시오.</p><span id="more"></span><p>“OOXXOXXOOO”와 같은 OX퀴즈의 결과가 있다. O는 문제를 맞은 것이고, X는 문제를 틀린 것이다. 문제를 맞은 경우 그 문제의 점수는 그 문제까지 연속된 O의 개수가 된다. 예를 들어, 10번 문제의 점수는 3이 된다. “OOXXOXXOOO”의 점수는 1+2+0+0+1+0+0+1+2+3 = 10점이다.</p><h1 id="입력"><a href="#입력" class="headerlink" title="입력"></a>입력</h1><p>첫째 줄에 테스트 케이스의 개수가 주어진다. 각 테스트 케이스는 한 줄로 이루어져 있고, 길이가 0보다 크고 80보다 작은 문자열이 주어진다. 문자열은 O와 X만으로 이루어져 있다.</p><h1 id="출력"><a href="#출력" class="headerlink" title="출력"></a>출력</h1><p>각 테스트 케이스마다 점수를 출력한다.</p><h1 id="풀이"><a href="#풀이" class="headerlink" title="풀이"></a>풀이</h1><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">case_num = <span class="built_in">int</span>(<span class="built_in">input</span>())</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(case_num):</span><br><span class="line">  test_case = <span class="built_in">input</span>()</span><br><span class="line">  score = <span class="number">0</span></span><br><span class="line">  count = <span class="number">0</span></span><br><span class="line">  <span class="keyword">for</span> i <span class="keyword">in</span> test_case:</span><br><span class="line">    <span class="keyword">if</span> i == <span class="string">&quot;O&quot;</span>:</span><br><span class="line">      count += <span class="number">1</span></span><br><span class="line">    <span class="keyword">elif</span> i == <span class="string">&quot;X&quot;</span>:</span><br><span class="line">      count = <span class="number">0</span></span><br><span class="line">    score += count  </span><br><span class="line">  <span class="built_in">print</span>(score)</span><br></pre></td></tr></table></figure><p>O가 연속으로 나올때마다 점수가 올라가야되므로 for문을 이용해서 count를 세는 법을 택했다. 그러다가 X가 나오면 다시 count를 리셋하기 위해서 0으로 돌려준다.</p>]]></content:encoded>
      
      
      <category domain="https://rimiiii.github.io/categories/ALGORITHM/">ALGORITHM</category>
      
      <category domain="https://rimiiii.github.io/categories/ALGORITHM/BAEKJOON/">BAEKJOON</category>
      
      
      <category domain="https://rimiiii.github.io/tags/algorithm/">algorithm</category>
      
      <category domain="https://rimiiii.github.io/tags/python/">python</category>
      
      
      <comments>https://rimiiii.github.io/2021/04/19/baekjoon3/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>[Python/백준] 1110번 더하기 사이클</title>
      <link>https://rimiiii.github.io/2021/04/15/baekjoon2/</link>
      <guid>https://rimiiii.github.io/2021/04/15/baekjoon2/</guid>
      <pubDate>Thu, 15 Apr 2021 13:32:29 GMT</pubDate>
      
      <description>&lt;p&gt;아래와 같은 N이 주어졌을 때, N의 사이클의 길이를 구하는 프로그램을 작성하시오.&lt;/p&gt;</description>
      
      
      
      <content:encoded><![CDATA[<p>아래와 같은 N이 주어졌을 때, N의 사이클의 길이를 구하는 프로그램을 작성하시오.</p><span id="more"></span><p>0보다 크거나 같고, 99보다 작거나 같은 정수가 주어질 때 다음과 같은 연산을 할 수 있다. 먼저 주어진 수가 10보다 작다면 앞에 0을 붙여 두 자리 수로 만들고, 각 자리의 숫자를 더한다. 그 다음, 주어진 수의 가장 오른쪽 자리 수와 앞에서 구한 합의 가장 오른쪽 자리 수를 이어 붙이면 새로운 수를 만들 수 있다. 다음 예를 보자. 26부터 시작한다. 2+6 = 8이다. 새로운 수는 68이다. 6+8 = 14이다. 새로운 수는 84이다. 8+4 = 12이다. 새로운 수는 42이다. 4+2 = 6이다. 새로운 수는 26이다. 위의 예는 4번만에 원래 수로 돌아올 수 있다. 따라서 26의 사이클의 길이는 4이다. </p><h1 id="입력"><a href="#입력" class="headerlink" title="입력"></a>입력</h1><p>첫째 줄에 N이 주어진다. N은 0보다 크거나 같고, 99보다 작거나 같은 정수이다.</p><h1 id="출력"><a href="#출력" class="headerlink" title="출력"></a>출력</h1><p>첫째 줄에 N의 사이클 길이를 출력한다.</p><h1 id="풀이"><a href="#풀이" class="headerlink" title="풀이"></a>풀이</h1><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">number = original = <span class="built_in">int</span>(<span class="built_in">input</span>())</span><br><span class="line">i = <span class="number">0</span></span><br><span class="line"><span class="keyword">while</span> <span class="literal">True</span>:</span><br><span class="line">    number = (number%<span class="number">10</span>)*<span class="number">10</span> + ((number//<span class="number">10</span> + number%<span class="number">10</span>) % <span class="number">10</span>)</span><br><span class="line">    <span class="keyword">if</span> number == original:</span><br><span class="line">        i += <span class="number">1</span></span><br><span class="line">        <span class="keyword">break</span></span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        i += <span class="number">1</span></span><br><span class="line"><span class="built_in">print</span>(i)</span><br></pre></td></tr></table></figure><p>초반엔 헤맸는데 십의 자리 숫자와 일의 자리 숫자를 구하는 법이 생각이 나지 않았다. //를 이용해서 십의 자리 숫자를 구하고 %를 이용해서 일의 자리 숫자를 구하여 새로운 숫자를 기존의 number에 넣고 제일 처음으로 받은 숫자를 number에 할당하는 동시에 original에도 함께 할당하면 쉽게 문제가 풀린다. </p>]]></content:encoded>
      
      
      <category domain="https://rimiiii.github.io/categories/ALGORITHM/">ALGORITHM</category>
      
      <category domain="https://rimiiii.github.io/categories/ALGORITHM/BAEKJOON/">BAEKJOON</category>
      
      
      <category domain="https://rimiiii.github.io/tags/algorithm/">algorithm</category>
      
      <category domain="https://rimiiii.github.io/tags/python/">python</category>
      
      
      <comments>https://rimiiii.github.io/2021/04/15/baekjoon2/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>[Python/백준] 10871번 X보다 작은 수</title>
      <link>https://rimiiii.github.io/2021/03/29/baekjoon1/</link>
      <guid>https://rimiiii.github.io/2021/03/29/baekjoon1/</guid>
      <pubDate>Mon, 29 Mar 2021 03:27:29 GMT</pubDate>
      
      <description>&lt;p&gt;정수 N개로 이루어진 수열 A와 정수 X가 주어진다. 이때, A에서 X보다 작은 수를 모두 출력하는 프로그램을 작성하시오.&lt;/p&gt;</description>
      
      
      
      <content:encoded><![CDATA[<p>정수 N개로 이루어진 수열 A와 정수 X가 주어진다. 이때, A에서 X보다 작은 수를 모두 출력하는 프로그램을 작성하시오.</p><span id="more"></span><h1 id="입력"><a href="#입력" class="headerlink" title="입력"></a>입력</h1><p>첫째 줄에 N과 X가 주어진다. (1 ≤ N, X ≤ 10,000)<br>둘째 줄에 수열 A를 이루는 정수 N개가 주어진다. 주어지는 정수는 모두 1보다 크거나 같고, 10,000보다 작거나 같은 정수이다.</p><h1 id="출력"><a href="#출력" class="headerlink" title="출력"></a>출력</h1><p>X보다 작은 수를 입력받은 순서대로 공백으로 구분해 출력한다. X보다 작은 수는 적어도 하나 존재한다.</p><h1 id="첫-풀이"><a href="#첫-풀이" class="headerlink" title="첫 풀이"></a>첫 풀이</h1><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> sys</span><br><span class="line">N, X = sys.stdin.readline().split()</span><br><span class="line">n = sys.stdin.readline().split()</span><br><span class="line">result = []</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> n:</span><br><span class="line">  <span class="keyword">if</span> <span class="built_in">int</span>(i) &lt; <span class="built_in">int</span>(X):</span><br><span class="line">    result.append(i)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot; &quot;</span>.join(result))</span><br></pre></td></tr></table></figure><h1 id="개선된-풀이"><a href="#개선된-풀이" class="headerlink" title="개선된 풀이"></a>개선된 풀이</h1><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> sys</span><br><span class="line"></span><br><span class="line">N, X = <span class="built_in">map</span>(<span class="built_in">int</span>, sys.stdin.readline().split())</span><br><span class="line">n = sys.stdin.readline().split()</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> n:</span><br><span class="line">  <span class="keyword">if</span> <span class="built_in">int</span>(i) &lt; <span class="built_in">int</span>(X):</span><br><span class="line">    <span class="built_in">print</span>(<span class="built_in">int</span>(i), end=<span class="string">&quot; &quot;</span>)</span><br></pre></td></tr></table></figure><p>N과 X를 int로 변환해야되는데 2개의 변수를 받기 때문에 뒷부분에서 필요할 때 int로 계속 감싸줬다. 그 부분을 찾아보니까 map을 사용해서 int로 각각 변환할 수 있다. 그리고 출력할때 print로 일렬로 세워야해서 result라는 빈 list로 만들어 append로 붙인 다음 join하였는데 print 안의 end를 사용하면 간단하게 된다.</p>]]></content:encoded>
      
      
      <category domain="https://rimiiii.github.io/categories/ALGORITHM/">ALGORITHM</category>
      
      <category domain="https://rimiiii.github.io/categories/ALGORITHM/BAEKJOON/">BAEKJOON</category>
      
      
      <category domain="https://rimiiii.github.io/tags/algorithm/">algorithm</category>
      
      <category domain="https://rimiiii.github.io/tags/python/">python</category>
      
      
      <comments>https://rimiiii.github.io/2021/03/29/baekjoon1/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>[Linux] tmux 사용법</title>
      <link>https://rimiiii.github.io/2020/07/03/linux1/</link>
      <guid>https://rimiiii.github.io/2020/07/03/linux1/</guid>
      <pubDate>Fri, 03 Jul 2020 05:16:32 GMT</pubDate>
      
      <description>&lt;p&gt;리눅스에서 하나의 창이 아닌 여러 창을 함께 사용할 때 유용한 &lt;code&gt;tmux 사용법&lt;/code&gt;이다. 리눅스 원격 연결이 꺼져도 서버가 꺼지지 않는 이상 tmux로 돌려놓은 코드는 다운되지 않는다.&lt;/p&gt;</description>
      
      
      
      <content:encoded><![CDATA[<p>리눅스에서 하나의 창이 아닌 여러 창을 함께 사용할 때 유용한 <code>tmux 사용법</code>이다. 리눅스 원격 연결이 꺼져도 서버가 꺼지지 않는 이상 tmux로 돌려놓은 코드는 다운되지 않는다.</p><span id="more"></span><h1 id="tmux-구성-요소"><a href="#tmux-구성-요소" class="headerlink" title="tmux 구성 요소"></a>tmux 구성 요소</h1><ul><li>session: 여러 윈도우로 구성</li><li>window: 터미널 화면, 세션 내에서 탭처럼 사용 가능</li><li>pane: 하나의 윈도우 내에서의 화면 분할</li></ul><h1 id="session-관련-명령어"><a href="#session-관련-명령어" class="headerlink" title="session 관련 명령어"></a>session 관련 명령어</h1><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"># 새로운 세션 생성</span><br><span class="line">tmux new -s (session_name)</span><br><span class="line"></span><br><span class="line"># 세션 만들면서 윈도우랑 같이 생성</span><br><span class="line">tmux new -s (session_name) -n (window_name)</span><br><span class="line"></span><br><span class="line"># 세션 종료</span><br><span class="line">exit</span><br><span class="line"></span><br><span class="line"># 세션 목록</span><br><span class="line">tmux ls</span><br><span class="line"></span><br><span class="line"># 세션 다시 시작하기(다시 불러오기)</span><br><span class="line">tmux attach -t session_number</span><br><span class="line"></span><br><span class="line"># 세션 중단하기</span><br><span class="line">(ctrl + b) d</span><br><span class="line"></span><br><span class="line"># 스크롤하기</span><br><span class="line">ctrl + b + [</span><br><span class="line"></span><br><span class="line"># 특정 세션 강제 종료</span><br><span class="line">tmux kill-session -t session_number</span><br></pre></td></tr></table></figure><h1 id="윈도우-관련-명령어"><a href="#윈도우-관련-명령어" class="headerlink" title="윈도우 관련 명령어"></a>윈도우 관련 명령어</h1><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"># 새 윈도우 생성</span><br><span class="line">(ctrl + b) c</span><br><span class="line"></span><br><span class="line"># 새 윈도우 이동</span><br><span class="line">(ctrl + b) b (숫자)</span><br></pre></td></tr></table></figure><h1 id="틀-관련-명령어"><a href="#틀-관련-명령어" class="headerlink" title="틀 관련 명령어"></a>틀 관련 명령어</h1><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"># 틀 나누기</span><br><span class="line">(ctrl + b) % #좌우로 나누기</span><br><span class="line">(ctrl + b) &quot; #위아래로 나누기</span><br><span class="line"></span><br><span class="line"># 틀끼리 이동하기</span><br><span class="line">(ctrl + b) 방향키</span><br><span class="line">(ctrl + b) q</span><br><span class="line">(ctrl + b) o #순서대로 이동</span><br><span class="line"></span><br><span class="line"># 틀 삭제</span><br><span class="line">(ctrl + d)</span><br><span class="line"></span><br><span class="line"># 틀 사이즈 조정</span><br><span class="line">(ctrl + b) : resize_pane -L 10 #L,R,U,D 입력하면 상하좌우로 조절됨</span><br><span class="line">(ctrl + b) (alt) 방향키</span><br><span class="line"></span><br><span class="line"># 단축키 목록</span><br><span class="line">(ctrl + b) ?</span><br></pre></td></tr></table></figure>]]></content:encoded>
      
      
      <category domain="https://rimiiii.github.io/categories/LINUX/">LINUX</category>
      
      
      <category domain="https://rimiiii.github.io/tags/tmux/">tmux</category>
      
      
      <comments>https://rimiiii.github.io/2020/07/03/linux1/#disqus_thread</comments>
      
    </item>
    
  </channel>
</rss>
